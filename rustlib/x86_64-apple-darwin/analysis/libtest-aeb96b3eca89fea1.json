{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":false,"distro_crate":true,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/rustc/4fb7144ed159f94491249e86d5bbd033b5d60550/","program":"/Users/runner/runners/2.166.3/work/1/s/build/x86_64-apple-darwin/stage1/bin/rustc","arguments":["--crate-name","test","--edition=2018","src/libtest/lib.rs","--error-format=json","--json=diagnostic-rendered-ansi","--crate-type","dylib","--crate-type","rlib","--emit=dep-info,link","-C","prefer-dynamic","-C","opt-level=3","-C","codegen-units=1","-C","debuginfo=1","--cfg","feature=\"backtrace\"","--cfg","feature=\"compiler-builtins-c\"","--cfg","feature=\"panic-unwind\"","--cfg","feature=\"profiler\"","-C","metadata=aeb96b3eca89fea1","-C","extra-filename=-aeb96b3eca89fea1","--out-dir","/Users/runner/runners/2.166.3/work/1/s/build/x86_64-apple-darwin/stage1-std/x86_64-apple-darwin/release/deps","--target","x86_64-apple-darwin","-L","dependency=/Users/runner/runners/2.166.3/work/1/s/build/x86_64-apple-darwin/stage1-std/x86_64-apple-darwin/release/deps","-L","dependency=/Users/runner/runners/2.166.3/work/1/s/build/x86_64-apple-darwin/stage1-std/release/deps","--extern","core=/Users/runner/runners/2.166.3/work/1/s/build/x86_64-apple-darwin/stage1-std/x86_64-apple-darwin/release/deps/libcore-50418dc826b2df8f.rlib","--extern","getopts=/Users/runner/runners/2.166.3/work/1/s/build/x86_64-apple-darwin/stage1-std/x86_64-apple-darwin/release/deps/libgetopts-99c82df665130963.rlib","--extern","libc=/Users/runner/runners/2.166.3/work/1/s/build/x86_64-apple-darwin/stage1-std/x86_64-apple-darwin/release/deps/liblibc-3f180da3975ae0e3.rlib","--extern","panic_abort=/Users/runner/runners/2.166.3/work/1/s/build/x86_64-apple-darwin/stage1-std/x86_64-apple-darwin/release/deps/libpanic_abort-d2aadf931d461022.rlib","--extern","panic_unwind=/Users/runner/runners/2.166.3/work/1/s/build/x86_64-apple-darwin/stage1-std/x86_64-apple-darwin/release/deps/libpanic_unwind-536039e6510e9808.rlib","--extern","proc_macro=/Users/runner/runners/2.166.3/work/1/s/build/x86_64-apple-darwin/stage1-std/x86_64-apple-darwin/release/deps/libproc_macro-ea53fafd621628e2.rlib","--extern","std=/Users/runner/runners/2.166.3/work/1/s/build/x86_64-apple-darwin/stage1-std/x86_64-apple-darwin/release/deps/libstd-ab6c8fcfd2d21f77.dylib","--extern","std=/Users/runner/runners/2.166.3/work/1/s/build/x86_64-apple-darwin/stage1-std/x86_64-apple-darwin/release/deps/libstd-ab6c8fcfd2d21f77.rlib","--extern","term=/Users/runner/runners/2.166.3/work/1/s/build/x86_64-apple-darwin/stage1-std/x86_64-apple-darwin/release/deps/libterm-40618ad3c8fe7452.rlib","-Zmacro-backtrace","-Zosx-rpath-install-name","-Clink-args=-Wl,-rpath,@loader_path/../lib","-Wrust_2018_idioms","-Wunused_lifetimes","-Dwarnings","-Zsave-analysis","-Cprefer-dynamic","-Zbinary-dep-depinfo","-L","native=/Users/runner/runners/2.166.3/work/1/s/build/x86_64-apple-darwin/stage1-std/x86_64-apple-darwin/release/build/compiler_builtins-712a6834a23640cf/out","-L","native=/Users/runner/runners/2.166.3/work/1/s/build/x86_64-apple-darwin/stage1-std/x86_64-apple-darwin/release/build/backtrace-sys-c3ebc5826d33e833/out","-L","native=/Users/runner/runners/2.166.3/work/1/s/build/x86_64-apple-darwin/stage1-std/x86_64-apple-darwin/release/build/profiler_builtins-2ecff0ffa8bd99da/out","--sysroot","/Users/runner/runners/2.166.3/work/1/s/build/x86_64-apple-darwin/stage1","-C","debug-assertions=n","-Z","force-unstable-if-unmarked"],"output":"/Users/runner/runners/2.166.3/work/1/s/build/x86_64-apple-darwin/stage1-std/x86_64-apple-darwin/release/deps/libtest-aeb96b3eca89fea1.dylib"},"prelude":{"crate_id":{"name":"test","disambiguator":[14047927703376091429,2987777764842779506]},"crate_root":"src/libtest","external_crates":[{"file_name":"/rustc/4fb7144ed159f94491249e86d5bbd033b5d60550/src/libtest/lib.rs","num":1,"id":{"name":"std","disambiguator":[9054049529852543209,5756799355281213394]}},{"file_name":"/rustc/4fb7144ed159f94491249e86d5bbd033b5d60550/src/libtest/lib.rs","num":2,"id":{"name":"core","disambiguator":[649336883146201894,3308516238322163950]}},{"file_name":"/rustc/4fb7144ed159f94491249e86d5bbd033b5d60550/src/libtest/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1154582834482060450,16344204990542480537]}},{"file_name":"/rustc/4fb7144ed159f94491249e86d5bbd033b5d60550/src/libtest/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9212379515936652129,17808485286264063370]}},{"file_name":"/rustc/4fb7144ed159f94491249e86d5bbd033b5d60550/src/libtest/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[13327579764654116281,14306064291630426625]}},{"file_name":"/rustc/4fb7144ed159f94491249e86d5bbd033b5d60550/src/libtest/helpers/concurrency.rs","num":6,"id":{"name":"libc","disambiguator":[17773251733480933597,18239998491734583498]}},{"file_name":"/rustc/4fb7144ed159f94491249e86d5bbd033b5d60550/src/libtest/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8567743581675804787,15655200220621371766]}},{"file_name":"/rustc/4fb7144ed159f94491249e86d5bbd033b5d60550/src/libtest/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15115520782807859583,9813785573872252500]}},{"file_name":"/rustc/4fb7144ed159f94491249e86d5bbd033b5d60550/src/libtest/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[1572943810868196833,3902827232285166711]}},{"file_name":"/rustc/4fb7144ed159f94491249e86d5bbd033b5d60550/src/libtest/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[6290371580101917419,15395902185345451181]}},{"file_name":"/rustc/4fb7144ed159f94491249e86d5bbd033b5d60550/src/libtest/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[2934540361684350378,924291485644145262]}},{"file_name":"/rustc/4fb7144ed159f94491249e86d5bbd033b5d60550/src/libtest/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[9277678418438935259,15657907931940784437]}},{"file_name":"/rustc/4fb7144ed159f94491249e86d5bbd033b5d60550/src/libtest/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5423566938548125357,18340948646597872466]}},{"file_name":"/rustc/4fb7144ed159f94491249e86d5bbd033b5d60550/src/libtest/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[489208416821938960,3305070343783546974]}},{"file_name":"/rustc/4fb7144ed159f94491249e86d5bbd033b5d60550/src/libtest/cli.rs","num":15,"id":{"name":"getopts","disambiguator":[8756684592220063638,17365201988200505114]}},{"file_name":"/rustc/4fb7144ed159f94491249e86d5bbd033b5d60550/src/libtest/cli.rs","num":16,"id":{"name":"rustc_std_workspace_std","disambiguator":[5624357766471051433,12442286086064031042]}},{"file_name":"/rustc/4fb7144ed159f94491249e86d5bbd033b5d60550/src/libtest/cli.rs","num":17,"id":{"name":"unicode_width","disambiguator":[392462334362905977,9392482956235306384]}},{"file_name":"/rustc/4fb7144ed159f94491249e86d5bbd033b5d60550/src/libtest/console.rs","num":18,"id":{"name":"term","disambiguator":[12331301280898709063,16641210874887239414]}}],"span":{"file_name":"src/libtest/lib.rs","byte_start":0,"byte_end":21936,"line_start":1,"line_end":645,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":762},"span":{"file_name":"src/libtest/lib.rs","byte_start":1348,"byte_end":1357,"line_start":35,"line_end":35,"column_start":23,"column_end":32},"alias_span":null,"name":"black_box","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":643},"span":{"file_name":"src/libtest/lib.rs","byte_start":1359,"byte_end":1366,"line_start":35,"line_end":35,"column_start":34,"column_end":41},"alias_span":null,"name":"Bencher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":227},"span":{"file_name":"src/libtest/lib.rs","byte_start":1392,"byte_end":1409,"line_start":36,"line_end":36,"column_start":24,"column_end":41},"alias_span":null,"name":"run_tests_console","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":781},"span":{"file_name":"src/libtest/lib.rs","byte_start":1435,"byte_end":1446,"line_start":37,"line_end":37,"column_start":25,"column_end":36},"alias_span":null,"name":"ColorConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":837},"span":{"file_name":"src/libtest/lib.rs","byte_start":1448,"byte_end":1455,"line_start":37,"line_end":37,"column_start":38,"column_end":45},"alias_span":null,"name":"Options","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":793},"span":{"file_name":"src/libtest/lib.rs","byte_start":1457,"byte_end":1469,"line_start":37,"line_end":37,"column_start":47,"column_end":59},"alias_span":null,"name":"OutputFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":811},"span":{"file_name":"src/libtest/lib.rs","byte_start":1471,"byte_end":1481,"line_start":37,"line_end":37,"column_start":61,"column_end":71},"alias_span":null,"name":"RunIgnored","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":758},"span":{"file_name":"src/libtest/lib.rs","byte_start":1483,"byte_end":1494,"line_start":37,"line_end":37,"column_start":73,"column_end":84},"alias_span":null,"name":"ShouldPanic","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"src/libtest/lib.rs","byte_start":1528,"byte_end":1529,"line_start":38,"line_end":38,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"src/libtest/lib.rs","byte_start":1528,"byte_end":1529,"line_start":38,"line_end":38,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"DynTestFn, DynBenchFn, TestFn, TDynBenchFn, TestDesc, StaticBenchFn, TestDescAndFn, StaticTestFn","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"src/libtest/lib.rs","byte_start":1528,"byte_end":1529,"line_start":38,"line_end":38,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":660},"span":{"file_name":"src/libtest/lib.rs","byte_start":1598,"byte_end":1606,"line_start":41,"line_end":41,"column_start":14,"column_end":22},"alias_span":null,"name":"TestOpts","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":586},"span":{"file_name":"src/libtest/lib.rs","byte_start":1711,"byte_end":1729,"line_start":46,"line_end":46,"column_start":9,"column_end":27},"alias_span":null,"name":"assert_test_result","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":643},"span":{"file_name":"src/libtest/lib.rs","byte_start":1746,"byte_end":1753,"line_start":47,"line_end":47,"column_start":16,"column_end":23},"alias_span":null,"name":"Bencher","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":140},"span":{"file_name":"src/libtest/lib.rs","byte_start":1769,"byte_end":1779,"line_start":48,"line_end":48,"column_start":15,"column_end":25},"alias_span":null,"name":"parse_opts","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":660},"span":{"file_name":"src/libtest/lib.rs","byte_start":1781,"byte_end":1789,"line_start":48,"line_end":48,"column_start":27,"column_end":35},"alias_span":null,"name":"TestOpts","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":603},"span":{"file_name":"src/libtest/lib.rs","byte_start":1800,"byte_end":1812,"line_start":49,"line_end":49,"column_start":9,"column_end":21},"alias_span":null,"name":"filter_tests","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":708},"span":{"file_name":"src/libtest/lib.rs","byte_start":1841,"byte_end":1847,"line_start":50,"line_end":50,"column_start":28,"column_end":34},"alias_span":null,"name":"Metric","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":720},"span":{"file_name":"src/libtest/lib.rs","byte_start":1849,"byte_end":1858,"line_start":50,"line_end":50,"column_start":36,"column_end":45},"alias_span":null,"name":"MetricMap","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":837},"span":{"file_name":"src/libtest/lib.rs","byte_start":1879,"byte_end":1886,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"alias_span":null,"name":"Options","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":811},"span":{"file_name":"src/libtest/lib.rs","byte_start":1888,"byte_end":1898,"line_start":51,"line_end":51,"column_start":28,"column_end":38},"alias_span":null,"name":"RunIgnored","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":829},"span":{"file_name":"src/libtest/lib.rs","byte_start":1900,"byte_end":1911,"line_start":51,"line_end":51,"column_start":40,"column_end":51},"alias_span":null,"name":"RunStrategy","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":758},"span":{"file_name":"src/libtest/lib.rs","byte_start":1913,"byte_end":1924,"line_start":51,"line_end":51,"column_start":53,"column_end":64},"alias_span":null,"name":"ShouldPanic","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":621},"span":{"file_name":"src/libtest/lib.rs","byte_start":1935,"byte_end":1943,"line_start":52,"line_end":52,"column_start":9,"column_end":17},"alias_span":null,"name":"run_test","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":580},"span":{"file_name":"src/libtest/lib.rs","byte_start":1945,"byte_end":1954,"line_start":52,"line_end":52,"column_start":19,"column_end":28},"alias_span":null,"name":"test_main","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":581},"span":{"file_name":"src/libtest/lib.rs","byte_start":1956,"byte_end":1972,"line_start":52,"line_end":52,"column_start":30,"column_end":46},"alias_span":null,"name":"test_main_static","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":867},"span":{"file_name":"src/libtest/lib.rs","byte_start":1996,"byte_end":2006,"line_start":53,"line_end":53,"column_start":23,"column_end":33},"alias_span":null,"name":"TestResult","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":870},"span":{"file_name":"src/libtest/lib.rs","byte_start":2008,"byte_end":2016,"line_start":53,"line_end":53,"column_start":35,"column_end":43},"alias_span":null,"name":"TrFailed","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":872},"span":{"file_name":"src/libtest/lib.rs","byte_start":2018,"byte_end":2029,"line_start":53,"line_end":53,"column_start":45,"column_end":56},"alias_span":null,"name":"TrFailedMsg","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":875},"span":{"file_name":"src/libtest/lib.rs","byte_start":2031,"byte_end":2040,"line_start":53,"line_end":53,"column_start":58,"column_end":67},"alias_span":null,"name":"TrIgnored","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":868},"span":{"file_name":"src/libtest/lib.rs","byte_start":2042,"byte_end":2046,"line_start":53,"line_end":53,"column_start":69,"column_end":73},"alias_span":null,"name":"TrOk","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":892},"span":{"file_name":"src/libtest/lib.rs","byte_start":2064,"byte_end":2076,"line_start":54,"line_end":54,"column_start":16,"column_end":28},"alias_span":null,"name":"TestExecTime","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":920},"span":{"file_name":"src/libtest/lib.rs","byte_start":2078,"byte_end":2093,"line_start":54,"line_end":54,"column_start":30,"column_end":45},"alias_span":null,"name":"TestTimeOptions","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":555},"span":{"file_name":"src/libtest/lib.rs","byte_start":2125,"byte_end":2134,"line_start":56,"line_end":56,"column_start":13,"column_end":22},"alias_span":null,"name":"DynTestFn","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":986},"span":{"file_name":"src/libtest/lib.rs","byte_start":2136,"byte_end":2147,"line_start":56,"line_end":56,"column_start":24,"column_end":35},"alias_span":null,"name":"DynTestName","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":552},"span":{"file_name":"src/libtest/lib.rs","byte_start":2149,"byte_end":2162,"line_start":56,"line_end":56,"column_start":37,"column_end":50},"alias_span":null,"name":"StaticBenchFn","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":549},"span":{"file_name":"src/libtest/lib.rs","byte_start":2164,"byte_end":2176,"line_start":56,"line_end":56,"column_start":52,"column_end":64},"alias_span":null,"name":"StaticTestFn","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":983},"span":{"file_name":"src/libtest/lib.rs","byte_start":2178,"byte_end":2192,"line_start":56,"line_end":56,"column_start":66,"column_end":80},"alias_span":null,"name":"StaticTestName","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1007},"span":{"file_name":"src/libtest/lib.rs","byte_start":2194,"byte_end":2202,"line_start":56,"line_end":56,"column_start":82,"column_end":90},"alias_span":null,"name":"TestDesc","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1027},"span":{"file_name":"src/libtest/lib.rs","byte_start":2216,"byte_end":2229,"line_start":57,"line_end":57,"column_start":13,"column_end":26},"alias_span":null,"name":"TestDescAndFn","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":982},"span":{"file_name":"src/libtest/lib.rs","byte_start":2231,"byte_end":2239,"line_start":57,"line_end":57,"column_start":28,"column_end":36},"alias_span":null,"name":"TestName","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":940},"span":{"file_name":"src/libtest/lib.rs","byte_start":2241,"byte_end":2249,"line_start":57,"line_end":57,"column_start":38,"column_end":46},"alias_span":null,"name":"TestType","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":2,"index":762},"span":{"file_name":"src/libtest/bench.rs","byte_start":21982,"byte_end":21991,"line_start":2,"line_end":2,"column_start":20,"column_end":29},"alias_span":null,"name":"black_box","value":"","parent":{"krate":0,"index":78}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"src/libtest/test_result.rs","byte_start":99567,"byte_end":99568,"line_start":8,"line_end":8,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"TrFailedMsg, TrOk, TrFailed, TrIgnored","parent":{"krate":0,"index":473}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"src/libtest/types.rs","byte_start":110643,"byte_end":110644,"line_start":9,"line_end":9,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"PadOnRight, PadNone","parent":{"krate":0,"index":532}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"src/libtest/types.rs","byte_start":110643,"byte_end":110644,"line_start":9,"line_end":9,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"DynTestFn, StaticBenchFn, DynBenchFn, StaticTestFn","parent":{"krate":0,"index":532}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"src/libtest/types.rs","byte_start":110643,"byte_end":110644,"line_start":9,"line_end":9,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"StaticTestName, DynTestName, AlignedTestName","parent":{"krate":0,"index":532}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"src/libtest/lib.rs","byte_start":0,"byte_end":21936,"line_start":1,"line_end":645,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"src/libtest/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":55},{"krate":0,"index":78},{"krate":0,"index":123},{"krate":0,"index":156},{"krate":0,"index":232},{"krate":0,"index":239},{"krate":0,"index":387},{"krate":0,"index":422},{"krate":0,"index":427},{"krate":0,"index":473},{"krate":0,"index":489},{"krate":0,"index":532},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":603},{"krate":0,"index":613},{"krate":0,"index":621},{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":640}],"decl_id":null,"docs":" Support code for rustc's built in unit-test and micro-benchmarking\n framework.","sig":null,"attributes":[{"value":"! Support code for rustc's built in unit-test and micro-benchmarking","span":{"file_name":"src/libtest/lib.rs","byte_start":0,"byte_end":70,"line_start":1,"line_end":1,"column_start":1,"column_end":71}},{"value":"! framework.","span":{"file_name":"src/libtest/lib.rs","byte_start":71,"byte_end":85,"line_start":2,"line_end":2,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"src/libtest/lib.rs","byte_start":86,"byte_end":89,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! Almost all user code will only be interested in `Bencher` and","span":{"file_name":"src/libtest/lib.rs","byte_start":90,"byte_end":155,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"! `black_box`. All other interactions (such as writing tests and","span":{"file_name":"src/libtest/lib.rs","byte_start":156,"byte_end":222,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"! benchmarks themselves) should be done via the `#[test]` and","span":{"file_name":"src/libtest/lib.rs","byte_start":223,"byte_end":286,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"! `#[bench]` attributes.","span":{"file_name":"src/libtest/lib.rs","byte_start":287,"byte_end":313,"line_start":7,"line_end":7,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"src/libtest/lib.rs","byte_start":314,"byte_end":317,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! See the [Testing Chapter](../book/ch11-00-testing.html) of the book for more details.","span":{"file_name":"src/libtest/lib.rs","byte_start":318,"byte_end":407,"line_start":9,"line_end":9,"column_start":1,"column_end":90}},{"value":"crate_name = \"test\"","span":{"file_name":"src/libtest/lib.rs","byte_start":865,"byte_end":888,"line_start":20,"line_end":20,"column_start":1,"column_end":24}},{"value":"unstable(feature = \"test\", issue = \"50297\")","span":{"file_name":"src/libtest/lib.rs","byte_start":889,"byte_end":936,"line_start":21,"line_end":21,"column_start":1,"column_end":48}},{"value":"feature(asm)","span":{"file_name":"src/libtest/lib.rs","byte_start":1027,"byte_end":1043,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"feature(libc)","span":{"file_name":"src/libtest/lib.rs","byte_start":1091,"byte_end":1104,"line_start":24,"line_end":24,"column_start":48,"column_end":61}},{"value":"feature(rustc_private)","span":{"file_name":"src/libtest/lib.rs","byte_start":1107,"byte_end":1133,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"feature(nll)","span":{"file_name":"src/libtest/lib.rs","byte_start":1134,"byte_end":1150,"line_start":26,"line_end":26,"column_start":1,"column_end":17}},{"value":"feature(bool_to_option)","span":{"file_name":"src/libtest/lib.rs","byte_start":1151,"byte_end":1178,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"feature(set_stdio)","span":{"file_name":"src/libtest/lib.rs","byte_start":1179,"byte_end":1201,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"feature(panic_unwind)","span":{"file_name":"src/libtest/lib.rs","byte_start":1202,"byte_end":1227,"line_start":29,"line_end":29,"column_start":1,"column_end":26}},{"value":"feature(staged_api)","span":{"file_name":"src/libtest/lib.rs","byte_start":1228,"byte_end":1251,"line_start":30,"line_end":30,"column_start":1,"column_end":24}},{"value":"feature(termination_trait_lib)","span":{"file_name":"src/libtest/lib.rs","byte_start":1252,"byte_end":1286,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"feature(test)","span":{"file_name":"src/libtest/lib.rs","byte_start":1287,"byte_end":1304,"line_start":32,"line_end":32,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":17},"span":{"file_name":"src/libtest/lib.rs","byte_start":1675,"byte_end":1679,"line_start":44,"line_end":44,"column_start":9,"column_end":13},"name":"test","qualname":"::test","value":"src/libtest/lib.rs","parent":null,"children":[{"krate":0,"index":18}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":78},"span":{"file_name":"src/libtest/bench.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bench","qualname":"::bench","value":"src/libtest/bench.rs","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":643},{"krate":0,"index":647},{"krate":0,"index":99},{"krate":0,"index":649},{"krate":0,"index":658},{"krate":0,"index":656},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":117},{"krate":0,"index":121}],"decl_id":null,"docs":" Benchmarking module.\n","sig":null,"attributes":[{"value":"! Benchmarking module.","span":{"file_name":"src/libtest/bench.rs","byte_start":21938,"byte_end":21962,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":643},"span":{"file_name":"src/libtest/bench.rs","byte_start":22521,"byte_end":22528,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"Bencher","qualname":"::bench::Bencher","value":"Bencher { bytes }","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646}],"decl_id":null,"docs":" Manager of the benchmarking runs.","sig":null,"attributes":[{"value":"/ Manager of the benchmarking runs.","span":{"file_name":"src/libtest/bench.rs","byte_start":22293,"byte_end":22330,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"src/libtest/bench.rs","byte_start":22331,"byte_end":22334,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This is fed into functions marked with `#[bench]` to allow for","span":{"file_name":"src/libtest/bench.rs","byte_start":22335,"byte_end":22401,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/ set-up & tear-down before running a piece of code repeatedly via a","span":{"file_name":"src/libtest/bench.rs","byte_start":22402,"byte_end":22472,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ call to `iter`.","span":{"file_name":"src/libtest/bench.rs","byte_start":22473,"byte_end":22492,"line_start":20,"line_end":20,"column_start":1,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":646},"span":{"file_name":"src/libtest/bench.rs","byte_start":22597,"byte_end":22602,"line_start":25,"line_end":25,"column_start":9,"column_end":14},"name":"bytes","qualname":"::bench::Bencher::bytes","value":"u64","parent":{"krate":0,"index":643},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"src/libtest/bench.rs","byte_start":22701,"byte_end":22705,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"iter","qualname":"<Bencher>::iter","value":"fn <T, F> (&mut self, mut inner: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Callback for benchmark functions to run in their body.\n","sig":null,"attributes":[{"value":"/ Callback for benchmark functions to run in their body.","span":{"file_name":"src/libtest/bench.rs","byte_start":22631,"byte_end":22689,"line_start":29,"line_end":29,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"src/libtest/bench.rs","byte_start":22960,"byte_end":22965,"line_start":42,"line_end":42,"column_start":12,"column_end":17},"name":"bench","qualname":"<Bencher>::bench","value":"fn <F> (&mut self, mut f: F) -> Option<stats::Summary>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":649},"span":{"file_name":"src/libtest/bench.rs","byte_start":23157,"byte_end":23169,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"BenchSamples","qualname":"::bench::BenchSamples","value":"BenchSamples { ns_iter_summ, mb_s }","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":650},"span":{"file_name":"src/libtest/bench.rs","byte_start":23180,"byte_end":23192,"line_start":53,"line_end":53,"column_start":9,"column_end":21},"name":"ns_iter_summ","qualname":"::bench::BenchSamples::ns_iter_summ","value":"stats::Summary","parent":{"krate":0,"index":649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":651},"span":{"file_name":"src/libtest/bench.rs","byte_start":23218,"byte_end":23222,"line_start":54,"line_end":54,"column_start":9,"column_end":13},"name":"mb_s","qualname":"::bench::BenchSamples::mb_s","value":"usize","parent":{"krate":0,"index":649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":105},"span":{"file_name":"src/libtest/bench.rs","byte_start":23241,"byte_end":23258,"line_start":57,"line_end":57,"column_start":8,"column_end":25},"name":"fmt_bench_samples","qualname":"::bench::fmt_bench_samples","value":"fn (bs: &BenchSamples) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":113},"span":{"file_name":"src/libtest/bench.rs","byte_start":24790,"byte_end":24794,"line_start":116,"line_end":116,"column_start":8,"column_end":12},"name":"iter","qualname":"::bench::iter","value":"fn <T, F> (inner: &mut F) -> stats::Summary","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":117},"span":{"file_name":"src/libtest/bench.rs","byte_start":26974,"byte_end":26983,"line_start":185,"line_end":185,"column_start":8,"column_end":17},"name":"benchmark","qualname":"::bench::benchmark","value":"fn <F> (desc: TestDesc, monitor_ch: Sender<CompletedTest>, nocapture: bool, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":121},"span":{"file_name":"src/libtest/bench.rs","byte_start":28465,"byte_end":28473,"line_start":232,"line_end":232,"column_start":8,"column_end":16},"name":"run_once","qualname":"::bench::run_once","value":"fn <F> (f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":660},"span":{"file_name":"src/libtest/cli.rs","byte_start":28889,"byte_end":28897,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"TestOpts","qualname":"::cli::TestOpts","value":"TestOpts { list, filter, filter_exact, force_run_in_process, exclude_should_panic, run_ignored, run_tests, bench_benchmarks, logfile, nocapture, color, format, test_threads, skip, time_options, options }","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":661},"span":{"file_name":"src/libtest/cli.rs","byte_start":28908,"byte_end":28912,"line_start":12,"line_end":12,"column_start":9,"column_end":13},"name":"list","qualname":"::cli::TestOpts::list","value":"bool","parent":{"krate":0,"index":660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":662},"span":{"file_name":"src/libtest/cli.rs","byte_start":28928,"byte_end":28934,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"name":"filter","qualname":"::cli::TestOpts::filter","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":663},"span":{"file_name":"src/libtest/cli.rs","byte_start":28960,"byte_end":28972,"line_start":14,"line_end":14,"column_start":9,"column_end":21},"name":"filter_exact","qualname":"::cli::TestOpts::filter_exact","value":"bool","parent":{"krate":0,"index":660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":664},"span":{"file_name":"src/libtest/cli.rs","byte_start":28988,"byte_end":29008,"line_start":15,"line_end":15,"column_start":9,"column_end":29},"name":"force_run_in_process","qualname":"::cli::TestOpts::force_run_in_process","value":"bool","parent":{"krate":0,"index":660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":665},"span":{"file_name":"src/libtest/cli.rs","byte_start":29024,"byte_end":29044,"line_start":16,"line_end":16,"column_start":9,"column_end":29},"name":"exclude_should_panic","qualname":"::cli::TestOpts::exclude_should_panic","value":"bool","parent":{"krate":0,"index":660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":666},"span":{"file_name":"src/libtest/cli.rs","byte_start":29060,"byte_end":29071,"line_start":17,"line_end":17,"column_start":9,"column_end":20},"name":"run_ignored","qualname":"::cli::TestOpts::run_ignored","value":"options::RunIgnored","parent":{"krate":0,"index":660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":667},"span":{"file_name":"src/libtest/cli.rs","byte_start":29093,"byte_end":29102,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"name":"run_tests","qualname":"::cli::TestOpts::run_tests","value":"bool","parent":{"krate":0,"index":660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":668},"span":{"file_name":"src/libtest/cli.rs","byte_start":29118,"byte_end":29134,"line_start":19,"line_end":19,"column_start":9,"column_end":25},"name":"bench_benchmarks","qualname":"::cli::TestOpts::bench_benchmarks","value":"bool","parent":{"krate":0,"index":660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":669},"span":{"file_name":"src/libtest/cli.rs","byte_start":29150,"byte_end":29157,"line_start":20,"line_end":20,"column_start":9,"column_end":16},"name":"logfile","qualname":"::cli::TestOpts::logfile","value":"std::option::Option<std::path::PathBuf>","parent":{"krate":0,"index":660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":670},"span":{"file_name":"src/libtest/cli.rs","byte_start":29184,"byte_end":29193,"line_start":21,"line_end":21,"column_start":9,"column_end":18},"name":"nocapture","qualname":"::cli::TestOpts::nocapture","value":"bool","parent":{"krate":0,"index":660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":671},"span":{"file_name":"src/libtest/cli.rs","byte_start":29209,"byte_end":29214,"line_start":22,"line_end":22,"column_start":9,"column_end":14},"name":"color","qualname":"::cli::TestOpts::color","value":"options::ColorConfig","parent":{"krate":0,"index":660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":672},"span":{"file_name":"src/libtest/cli.rs","byte_start":29237,"byte_end":29243,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"name":"format","qualname":"::cli::TestOpts::format","value":"options::OutputFormat","parent":{"krate":0,"index":660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":673},"span":{"file_name":"src/libtest/cli.rs","byte_start":29267,"byte_end":29279,"line_start":24,"line_end":24,"column_start":9,"column_end":21},"name":"test_threads","qualname":"::cli::TestOpts::test_threads","value":"std::option::Option<usize>","parent":{"krate":0,"index":660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":674},"span":{"file_name":"src/libtest/cli.rs","byte_start":29304,"byte_end":29308,"line_start":25,"line_end":25,"column_start":9,"column_end":13},"name":"skip","qualname":"::cli::TestOpts::skip","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":675},"span":{"file_name":"src/libtest/cli.rs","byte_start":29331,"byte_end":29343,"line_start":26,"line_end":26,"column_start":9,"column_end":21},"name":"time_options","qualname":"::cli::TestOpts::time_options","value":"std::option::Option<time::TestTimeOptions>","parent":{"krate":0,"index":660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":676},"span":{"file_name":"src/libtest/cli.rs","byte_start":29378,"byte_end":29385,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"name":"options","qualname":"::cli::TestOpts::options","value":"options::Options","parent":{"krate":0,"index":660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"src/libtest/cli.rs","byte_start":29426,"byte_end":29435,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"use_color","qualname":"<TestOpts>::use_color","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":135},"span":{"file_name":"src/libtest/cli.rs","byte_start":29717,"byte_end":29723,"line_start":41,"line_end":41,"column_start":10,"column_end":16},"name":"OptRes","qualname":"::cli::OptRes","value":"Result<TestOpts, String>","parent":null,"children":[],"decl_id":null,"docs":" Result of parsing the options.\n","sig":null,"attributes":[{"value":"/ Result of parsing the options.","span":{"file_name":"src/libtest/cli.rs","byte_start":29673,"byte_end":29707,"line_start":40,"line_end":40,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":140},"span":{"file_name":"src/libtest/cli.rs","byte_start":35617,"byte_end":35627,"line_start":188,"line_end":188,"column_start":8,"column_end":18},"name":"parse_opts","qualname":"::cli::parse_opts","value":"fn (args: &[String]) -> Option<OptRes>","parent":null,"children":[],"decl_id":null,"docs":" Parses command line arguments into test options.\n Returns `None` if help was requested (since we only show help message and don't run tests),\n returns `Some(Err(..))` if provided arguments are incorrect,\n otherwise creates a `TestOpts` object and returns it.\n","sig":null,"attributes":[{"value":"/ Parses command line arguments into test options.","span":{"file_name":"src/libtest/cli.rs","byte_start":35338,"byte_end":35390,"line_start":184,"line_end":184,"column_start":1,"column_end":53}},{"value":"/ Returns `None` if help was requested (since we only show help message and don't run tests),","span":{"file_name":"src/libtest/cli.rs","byte_start":35391,"byte_end":35486,"line_start":185,"line_end":185,"column_start":1,"column_end":96}},{"value":"/ returns `Some(Err(..))` if provided arguments are incorrect,","span":{"file_name":"src/libtest/cli.rs","byte_start":35487,"byte_end":35551,"line_start":186,"line_end":186,"column_start":1,"column_end":65}},{"value":"/ otherwise creates a `TestOpts` object and returns it.","span":{"file_name":"src/libtest/cli.rs","byte_start":35552,"byte_end":35609,"line_start":187,"line_end":187,"column_start":1,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":187},"span":{"file_name":"src/libtest/console.rs","byte_start":43939,"byte_end":43945,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Pretty","qualname":"::console::OutputLocation::Pretty","value":"OutputLocation::Pretty(Box<term::StdoutTerminal>)","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":190},"span":{"file_name":"src/libtest/console.rs","byte_start":43978,"byte_end":43981,"line_start":24,"line_end":24,"column_start":5,"column_end":8},"name":"Raw","qualname":"::console::OutputLocation::Raw","value":"OutputLocation::Raw(T)","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":185},"span":{"file_name":"src/libtest/console.rs","byte_start":43915,"byte_end":43929,"line_start":22,"line_end":22,"column_start":10,"column_end":24},"name":"OutputLocation","qualname":"::console::OutputLocation","value":"OutputLocation::{Pretty, Raw}","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":190}],"decl_id":null,"docs":" Generic wrapper over stdout.\n","sig":null,"attributes":[{"value":"/ Generic wrapper over stdout.","span":{"file_name":"src/libtest/console.rs","byte_start":43873,"byte_end":43905,"line_start":21,"line_end":21,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":197},"span":{"file_name":"src/libtest/console.rs","byte_start":44500,"byte_end":44516,"line_start":43,"line_end":43,"column_start":12,"column_end":28},"name":"ConsoleTestState","qualname":"::console::ConsoleTestState","value":"ConsoleTestState { log_out, total, passed, failed, ignored, allowed_fail, filtered_out, measured, metrics, failures, not_failures, time_failures, options }","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":198},"span":{"file_name":"src/libtest/console.rs","byte_start":44527,"byte_end":44534,"line_start":44,"line_end":44,"column_start":9,"column_end":16},"name":"log_out","qualname":"::console::ConsoleTestState::log_out","value":"std::option::Option<std::fs::File>","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":199},"span":{"file_name":"src/libtest/console.rs","byte_start":44558,"byte_end":44563,"line_start":45,"line_end":45,"column_start":9,"column_end":14},"name":"total","qualname":"::console::ConsoleTestState::total","value":"usize","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":200},"span":{"file_name":"src/libtest/console.rs","byte_start":44580,"byte_end":44586,"line_start":46,"line_end":46,"column_start":9,"column_end":15},"name":"passed","qualname":"::console::ConsoleTestState::passed","value":"usize","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":201},"span":{"file_name":"src/libtest/console.rs","byte_start":44603,"byte_end":44609,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"name":"failed","qualname":"::console::ConsoleTestState::failed","value":"usize","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":202},"span":{"file_name":"src/libtest/console.rs","byte_start":44626,"byte_end":44633,"line_start":48,"line_end":48,"column_start":9,"column_end":16},"name":"ignored","qualname":"::console::ConsoleTestState::ignored","value":"usize","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":203},"span":{"file_name":"src/libtest/console.rs","byte_start":44650,"byte_end":44662,"line_start":49,"line_end":49,"column_start":9,"column_end":21},"name":"allowed_fail","qualname":"::console::ConsoleTestState::allowed_fail","value":"usize","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":204},"span":{"file_name":"src/libtest/console.rs","byte_start":44679,"byte_end":44691,"line_start":50,"line_end":50,"column_start":9,"column_end":21},"name":"filtered_out","qualname":"::console::ConsoleTestState::filtered_out","value":"usize","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":205},"span":{"file_name":"src/libtest/console.rs","byte_start":44708,"byte_end":44716,"line_start":51,"line_end":51,"column_start":9,"column_end":17},"name":"measured","qualname":"::console::ConsoleTestState::measured","value":"usize","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":206},"span":{"file_name":"src/libtest/console.rs","byte_start":44733,"byte_end":44740,"line_start":52,"line_end":52,"column_start":9,"column_end":16},"name":"metrics","qualname":"::console::ConsoleTestState::metrics","value":"helpers::metrics::MetricMap","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":207},"span":{"file_name":"src/libtest/console.rs","byte_start":44761,"byte_end":44769,"line_start":53,"line_end":53,"column_start":9,"column_end":17},"name":"failures","qualname":"::console::ConsoleTestState::failures","value":"std::vec::Vec<(types::TestDesc, std::vec::Vec<u8>)>","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":208},"span":{"file_name":"src/libtest/console.rs","byte_start":44805,"byte_end":44817,"line_start":54,"line_end":54,"column_start":9,"column_end":21},"name":"not_failures","qualname":"::console::ConsoleTestState::not_failures","value":"std::vec::Vec<(types::TestDesc, std::vec::Vec<u8>)>","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":209},"span":{"file_name":"src/libtest/console.rs","byte_start":44853,"byte_end":44866,"line_start":55,"line_end":55,"column_start":9,"column_end":22},"name":"time_failures","qualname":"::console::ConsoleTestState::time_failures","value":"std::vec::Vec<(types::TestDesc, std::vec::Vec<u8>)>","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":210},"span":{"file_name":"src/libtest/console.rs","byte_start":44902,"byte_end":44909,"line_start":56,"line_end":56,"column_start":9,"column_end":16},"name":"options","qualname":"::console::ConsoleTestState::options","value":"options::Options","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"src/libtest/console.rs","byte_start":44958,"byte_end":44961,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<ConsoleTestState>::new","value":"fn (opts: &TestOpts) -> io::Result<ConsoleTestState>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"src/libtest/console.rs","byte_start":45591,"byte_end":45600,"line_start":83,"line_end":83,"column_start":12,"column_end":21},"name":"write_log","qualname":"<ConsoleTestState>::write_log","value":"fn <F, S> (&mut self, msg: F) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"src/libtest/console.rs","byte_start":45958,"byte_end":45974,"line_start":98,"line_end":98,"column_start":12,"column_end":28},"name":"write_log_result","qualname":"<ConsoleTestState>::write_log_result","value":"fn (&mut self, test: &TestDesc, result: &TestResult, exec_time: Option<&TestExecTime>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":221},"span":{"file_name":"src/libtest/console.rs","byte_start":47191,"byte_end":47209,"line_start":131,"line_end":131,"column_start":8,"column_end":26},"name":"list_tests_console","qualname":"::console::list_tests_console","value":"fn (opts: &TestOpts, tests: Vec<TestDescAndFn>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":227},"span":{"file_name":"src/libtest/console.rs","byte_start":51026,"byte_end":51043,"line_start":251,"line_end":251,"column_start":8,"column_end":25},"name":"run_tests_console","qualname":"::console::run_tests_console","value":"fn (opts: &TestOpts, tests: Vec<TestDescAndFn>) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" A simple console test runner.\n Runs provided tests reporting process and results to the stdout.\n","sig":null,"attributes":[{"value":"/ A simple console test runner.","span":{"file_name":"src/libtest/console.rs","byte_start":50916,"byte_end":50949,"line_start":249,"line_end":249,"column_start":1,"column_end":34}},{"value":"/ Runs provided tests reporting process and results to the stdout.","span":{"file_name":"src/libtest/console.rs","byte_start":50950,"byte_end":51018,"line_start":250,"line_end":250,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":679},"span":{"file_name":"src/libtest/event.rs","byte_start":52655,"byte_end":52668,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"CompletedTest","qualname":"::event::CompletedTest","value":"CompletedTest { desc, result, exec_time, stdout }","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":680},"span":{"file_name":"src/libtest/event.rs","byte_start":52679,"byte_end":52683,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"name":"desc","qualname":"::event::CompletedTest::desc","value":"types::TestDesc","parent":{"krate":0,"index":679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":681},"span":{"file_name":"src/libtest/event.rs","byte_start":52703,"byte_end":52709,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"result","qualname":"::event::CompletedTest::result","value":"test_result::TestResult","parent":{"krate":0,"index":679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":682},"span":{"file_name":"src/libtest/event.rs","byte_start":52731,"byte_end":52740,"line_start":12,"line_end":12,"column_start":9,"column_end":18},"name":"exec_time","qualname":"::event::CompletedTest::exec_time","value":"std::option::Option<time::TestExecTime>","parent":{"krate":0,"index":679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":683},"span":{"file_name":"src/libtest/event.rs","byte_start":52772,"byte_end":52778,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"name":"stdout","qualname":"::event::CompletedTest::stdout","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"src/libtest/event.rs","byte_start":52824,"byte_end":52827,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<CompletedTest>::new","value":"fn (desc: TestDesc, result: TestResult, exec_time: Option<TestExecTime>, stdout: Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":689},"span":{"file_name":"src/libtest/event.rs","byte_start":53109,"byte_end":53119,"line_start":31,"line_end":31,"column_start":5,"column_end":15},"name":"TeFiltered","qualname":"::event::TestEvent::TeFiltered","value":"TestEvent::TeFiltered(Vec<TestDesc>)","parent":{"krate":0,"index":688},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":692},"span":{"file_name":"src/libtest/event.rs","byte_start":53140,"byte_end":53146,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"TeWait","qualname":"::event::TestEvent::TeWait","value":"TestEvent::TeWait(TestDesc)","parent":{"krate":0,"index":688},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":695},"span":{"file_name":"src/libtest/event.rs","byte_start":53162,"byte_end":53170,"line_start":33,"line_end":33,"column_start":5,"column_end":13},"name":"TeResult","qualname":"::event::TestEvent::TeResult","value":"TestEvent::TeResult(CompletedTest)","parent":{"krate":0,"index":688},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":698},"span":{"file_name":"src/libtest/event.rs","byte_start":53191,"byte_end":53200,"line_start":34,"line_end":34,"column_start":5,"column_end":14},"name":"TeTimeout","qualname":"::event::TestEvent::TeTimeout","value":"TestEvent::TeTimeout(TestDesc)","parent":{"krate":0,"index":688},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":701},"span":{"file_name":"src/libtest/event.rs","byte_start":53216,"byte_end":53229,"line_start":35,"line_end":35,"column_start":5,"column_end":18},"name":"TeFilteredOut","qualname":"::event::TestEvent::TeFilteredOut","value":"TestEvent::TeFilteredOut(usize)","parent":{"krate":0,"index":688},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":688},"span":{"file_name":"src/libtest/event.rs","byte_start":53093,"byte_end":53102,"line_start":30,"line_end":30,"column_start":10,"column_end":19},"name":"TestEvent","qualname":"::event::TestEvent","value":"TestEvent::{TeFiltered, TeWait, TeResult, TeTimeout, TeFilteredOut}","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":692},{"krate":0,"index":695},{"krate":0,"index":698},{"krate":0,"index":701}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"src/libtest/formatters/json.rs","byte_start":54724,"byte_end":54727,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<JsonFormatter<T>>::new","value":"fn (out: OutputLocation<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":62510,"byte_end":62513,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<PrettyFormatter<T>>::new","value":"fn (out: OutputLocation<T>, use_color: bool, max_name_len: usize, is_multithreaded: bool, time_options: Option<time::TestTimeOptions>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":62909,"byte_end":62917,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"write_ok","qualname":"<PrettyFormatter<T>>::write_ok","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":63025,"byte_end":63037,"line_start":43,"line_end":43,"column_start":12,"column_end":24},"name":"write_failed","qualname":"<PrettyFormatter<T>>::write_failed","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":63147,"byte_end":63160,"line_start":47,"line_end":47,"column_start":12,"column_end":25},"name":"write_ignored","qualname":"<PrettyFormatter<T>>::write_ignored","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":63274,"byte_end":63292,"line_start":51,"line_end":51,"column_start":12,"column_end":30},"name":"write_allowed_fail","qualname":"<PrettyFormatter<T>>::write_allowed_fail","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":63415,"byte_end":63432,"line_start":55,"line_end":55,"column_start":12,"column_end":29},"name":"write_time_failed","qualname":"<PrettyFormatter<T>>::write_time_failed","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":63564,"byte_end":63575,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"write_bench","qualname":"<PrettyFormatter<T>>::write_bench","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":63679,"byte_end":63697,"line_start":63,"line_end":63,"column_start":12,"column_end":30},"name":"write_short_result","qualname":"<PrettyFormatter<T>>::write_short_result","value":"fn (&mut self, result: &str, color: term::color::Color) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":63860,"byte_end":63872,"line_start":71,"line_end":71,"column_start":12,"column_end":24},"name":"write_pretty","qualname":"<PrettyFormatter<T>>::write_pretty","value":"fn (&mut self, word: &str, color: term::color::Color) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":64473,"byte_end":64484,"line_start":90,"line_end":90,"column_start":12,"column_end":23},"name":"write_plain","qualname":"<PrettyFormatter<T>>::write_plain","value":"fn <S> (&mut self, s: S) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":66485,"byte_end":66500,"line_start":158,"line_end":158,"column_start":12,"column_end":27},"name":"write_successes","qualname":"<PrettyFormatter<T>>::write_successes","value":"fn (&mut self, state: &ConsoleTestState) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":66637,"byte_end":66651,"line_start":162,"line_end":162,"column_start":12,"column_end":26},"name":"write_failures","qualname":"<PrettyFormatter<T>>::write_failures","value":"fn (&mut self, state: &ConsoleTestState) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":66783,"byte_end":66802,"line_start":166,"line_end":166,"column_start":12,"column_end":31},"name":"write_time_failures","qualname":"<PrettyFormatter<T>>::write_time_failures","value":"fn (&mut self, state: &ConsoleTestState) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":71235,"byte_end":71238,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<TerseFormatter<T>>::new","value":"fn (out: OutputLocation<T>, use_color: bool, max_name_len: usize, is_multithreaded: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":71636,"byte_end":71644,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"write_ok","qualname":"<TerseFormatter<T>>::write_ok","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":71751,"byte_end":71763,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"write_failed","qualname":"<TerseFormatter<T>>::write_failed","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":71868,"byte_end":71881,"line_start":52,"line_end":52,"column_start":12,"column_end":25},"name":"write_ignored","qualname":"<TerseFormatter<T>>::write_ignored","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":71989,"byte_end":72007,"line_start":56,"line_end":56,"column_start":12,"column_end":30},"name":"write_allowed_fail","qualname":"<TerseFormatter<T>>::write_allowed_fail","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":72115,"byte_end":72126,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"write_bench","qualname":"<TerseFormatter<T>>::write_bench","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":72230,"byte_end":72248,"line_start":64,"line_end":64,"column_start":12,"column_end":30},"name":"write_short_result","qualname":"<TerseFormatter<T>>::write_short_result","value":"fn (&mut self, result: &str, color: term::color::Color) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":72866,"byte_end":72878,"line_start":82,"line_end":82,"column_start":12,"column_end":24},"name":"write_pretty","qualname":"<TerseFormatter<T>>::write_pretty","value":"fn (&mut self, word: &str, color: term::color::Color) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":73479,"byte_end":73490,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"write_plain","qualname":"<TerseFormatter<T>>::write_plain","value":"fn <S> (&mut self, s: S) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":73657,"byte_end":73670,"line_start":107,"line_end":107,"column_start":12,"column_end":25},"name":"write_outputs","qualname":"<TerseFormatter<T>>::write_outputs","value":"fn (&mut self, state: &ConsoleTestState) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":74570,"byte_end":74584,"line_start":133,"line_end":133,"column_start":12,"column_end":26},"name":"write_failures","qualname":"<TerseFormatter<T>>::write_failures","value":"fn (&mut self, state: &ConsoleTestState) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"src/libtest/formatters/mod.rs","byte_start":53606,"byte_end":53621,"line_start":19,"line_end":19,"column_start":8,"column_end":23},"name":"write_run_start","qualname":"::formatters::OutputFormatter::write_run_start","value":"fn (&mut self, test_count: usize) -> io::Result<()>","parent":{"krate":0,"index":380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"src/libtest/formatters/mod.rs","byte_start":53678,"byte_end":53694,"line_start":20,"line_end":20,"column_start":8,"column_end":24},"name":"write_test_start","qualname":"::formatters::OutputFormatter::write_test_start","value":"fn (&mut self, desc: &TestDesc) -> io::Result<()>","parent":{"krate":0,"index":380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"src/libtest/formatters/mod.rs","byte_start":53749,"byte_end":53762,"line_start":21,"line_end":21,"column_start":8,"column_end":21},"name":"write_timeout","qualname":"::formatters::OutputFormatter::write_timeout","value":"fn (&mut self, desc: &TestDesc) -> io::Result<()>","parent":{"krate":0,"index":380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"src/libtest/formatters/mod.rs","byte_start":53817,"byte_end":53829,"line_start":22,"line_end":22,"column_start":8,"column_end":20},"name":"write_result","qualname":"::formatters::OutputFormatter::write_result","value":"fn (&mut self, desc: &TestDesc, result: &TestResult, exec_time: Option<&time::TestExecTime>, stdout: &[u8], state: &ConsoleTestState) -> io::Result<()>","parent":{"krate":0,"index":380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"src/libtest/formatters/mod.rs","byte_start":54041,"byte_end":54057,"line_start":30,"line_end":30,"column_start":8,"column_end":24},"name":"write_run_finish","qualname":"::formatters::OutputFormatter::write_run_finish","value":"fn (&mut self, state: &ConsoleTestState) -> io::Result<bool>","parent":{"krate":0,"index":380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":388},"span":{"file_name":"src/libtest/helpers/concurrency.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"concurrency","qualname":"::helpers::concurrency","value":"src/libtest/helpers/concurrency.rs","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390}],"decl_id":null,"docs":" Helper module which helps to determine amount of threads to be used\n during tests execution.\n","sig":null,"attributes":[{"value":"! Helper module which helps to determine amount of threads to be used","span":{"file_name":"src/libtest/helpers/concurrency.rs","byte_start":79045,"byte_end":79116,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"! during tests execution.","span":{"file_name":"src/libtest/helpers/concurrency.rs","byte_start":79117,"byte_end":79144,"line_start":2,"line_end":2,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":390},"span":{"file_name":"src/libtest/helpers/concurrency.rs","byte_start":79188,"byte_end":79203,"line_start":6,"line_end":6,"column_start":8,"column_end":23},"name":"get_concurrency","qualname":"::helpers::concurrency::get_concurrency","value":"fn () -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"src/libtest/helpers/concurrency.rs","byte_start":79160,"byte_end":79180,"line_start":5,"line_end":5,"column_start":1,"column_end":21}}]},{"kind":"Mod","id":{"krate":0,"index":392},"span":{"file_name":"src/libtest/helpers/exit_code.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"exit_code","qualname":"::helpers::exit_code","value":"src/libtest/helpers/exit_code.rs","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394}],"decl_id":null,"docs":" Helper module to detect subprocess exit code.\n","sig":null,"attributes":[{"value":"! Helper module to detect subprocess exit code.","span":{"file_name":"src/libtest/helpers/exit_code.rs","byte_start":83007,"byte_end":83056,"line_start":1,"line_end":1,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":394},"span":{"file_name":"src/libtest/helpers/exit_code.rs","byte_start":83271,"byte_end":83284,"line_start":11,"line_end":11,"column_start":8,"column_end":21},"name":"get_exit_code","qualname":"::helpers::exit_code::get_exit_code","value":"fn (status: ExitStatus) -> Result<i32, String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(unix)","span":{"file_name":"src/libtest/helpers/exit_code.rs","byte_start":83251,"byte_end":83263,"line_start":10,"line_end":10,"column_start":1,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":396},"span":{"file_name":"src/libtest/helpers/isatty.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"isatty","qualname":"::helpers::isatty","value":"src/libtest/helpers/isatty.rs","parent":null,"children":[{"krate":0,"index":397}],"decl_id":null,"docs":" Helper module which provides a function to test\n if stdout is a tty.\n","sig":null,"attributes":[{"value":"! Helper module which provides a function to test","span":{"file_name":"src/libtest/helpers/isatty.rs","byte_start":83660,"byte_end":83711,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"! if stdout is a tty.","span":{"file_name":"src/libtest/helpers/isatty.rs","byte_start":83712,"byte_end":83735,"line_start":2,"line_end":2,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":397},"span":{"file_name":"src/libtest/helpers/isatty.rs","byte_start":84029,"byte_end":84042,"line_start":15,"line_end":15,"column_start":8,"column_end":21},"name":"stdout_isatty","qualname":"::helpers::isatty::stdout_isatty","value":"fn () -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(unix)","span":{"file_name":"src/libtest/helpers/isatty.rs","byte_start":84009,"byte_end":84021,"line_start":14,"line_end":14,"column_start":1,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":398},"span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"metrics","qualname":"::helpers::metrics","value":"src/libtest/helpers/metrics.rs","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":708},{"krate":0,"index":718},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":712},{"krate":0,"index":711},{"krate":0,"index":400},{"krate":0,"index":720},{"krate":0,"index":727},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":402}],"decl_id":null,"docs":" Benchmark metrics.\n","sig":null,"attributes":[{"value":"! Benchmark metrics.","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":84613,"byte_end":84635,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":708},"span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":84721,"byte_end":84727,"line_start":5,"line_end":5,"column_start":12,"column_end":18},"name":"Metric","qualname":"::helpers::metrics::Metric","value":"Metric {  }","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":710}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":84790,"byte_end":84793,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"new","qualname":"<Metric>::new","value":"fn (value: f64, noise: f64) -> Metric","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":720},"span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":84910,"byte_end":84919,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"MetricMap","qualname":"::helpers::metrics::MetricMap","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":84976,"byte_end":84979,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<MetricMap>::new","value":"fn () -> MetricMap","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":85808,"byte_end":85821,"line_start":37,"line_end":37,"column_start":12,"column_end":25},"name":"insert_metric","qualname":"<MetricMap>::insert_metric","value":"fn (&mut self, name: &str, value: f64, noise: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Insert a named `value` (+/- `noise`) metric into the map. The value\n must be non-negative. The `noise` indicates the uncertainty of the\n metric, which doubles as the \"noise range\" of acceptable\n pairwise-regressions on this named value, when comparing from one\n metric to the next using `compare_to_old`.","sig":null,"attributes":[{"value":"/ Insert a named `value` (+/- `noise`) metric into the map. The value","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":85043,"byte_end":85114,"line_start":24,"line_end":24,"column_start":5,"column_end":76}},{"value":"/ must be non-negative. The `noise` indicates the uncertainty of the","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":85119,"byte_end":85189,"line_start":25,"line_end":25,"column_start":5,"column_end":75}},{"value":"/ metric, which doubles as the \"noise range\" of acceptable","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":85194,"byte_end":85254,"line_start":26,"line_end":26,"column_start":5,"column_end":65}},{"value":"/ pairwise-regressions on this named value, when comparing from one","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":85259,"byte_end":85328,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ metric to the next using `compare_to_old`.","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":85333,"byte_end":85379,"line_start":28,"line_end":28,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":85384,"byte_end":85387,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ If `noise` is positive, then it means this metric is of a value","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":85392,"byte_end":85459,"line_start":30,"line_end":30,"column_start":5,"column_end":72}},{"value":"/ you want to see grow smaller, so a change larger than `noise` in the","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":85464,"byte_end":85536,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ positive direction represents a regression.","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":85541,"byte_end":85588,"line_start":32,"line_end":32,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":85593,"byte_end":85596,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ If `noise` is negative, then it means this metric is of a value","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":85601,"byte_end":85668,"line_start":34,"line_end":34,"column_start":5,"column_end":72}},{"value":"/ you want to see grow larger, so a change larger than `noise` in the","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":85673,"byte_end":85744,"line_start":35,"line_end":35,"column_start":5,"column_end":76}},{"value":"/ negative direction represents a regression.","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":85749,"byte_end":85796,"line_start":36,"line_end":36,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":85973,"byte_end":85984,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"fmt_metrics","qualname":"<MetricMap>::fmt_metrics","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":407},"span":{"file_name":"src/libtest/helpers/sink.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sink","qualname":"::helpers::sink","value":"src/libtest/helpers/sink.rs","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":414},{"krate":0,"index":417},{"krate":0,"index":419}],"decl_id":null,"docs":" Module providing a helper structure to capture output in subprocesses.\n","sig":null,"attributes":[{"value":"! Module providing a helper structure to capture output in subprocesses.","span":{"file_name":"src/libtest/helpers/sink.rs","byte_start":86200,"byte_end":86274,"line_start":1,"line_end":1,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":414},"span":{"file_name":"src/libtest/helpers/sink.rs","byte_start":86358,"byte_end":86362,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Sink","qualname":"::helpers::sink::Sink","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"src/libtest/helpers/sink.rs","byte_start":86409,"byte_end":86418,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"new_boxed","qualname":"<Sink>::new_boxed","value":"fn (data: &Arc<Mutex<Vec<u8>>>) -> Box<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":730},"span":{"file_name":"src/libtest/options.rs","byte_start":86889,"byte_end":86892,"line_start":6,"line_end":6,"column_start":5,"column_end":8},"name":"Yes","qualname":"::options::Concurrent::Yes","value":"Concurrent::Yes","parent":{"krate":0,"index":729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":732},"span":{"file_name":"src/libtest/options.rs","byte_start":86898,"byte_end":86900,"line_start":7,"line_end":7,"column_start":5,"column_end":7},"name":"No","qualname":"::options::Concurrent::No","value":"Concurrent::No","parent":{"krate":0,"index":729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":729},"span":{"file_name":"src/libtest/options.rs","byte_start":86872,"byte_end":86882,"line_start":5,"line_end":5,"column_start":10,"column_end":20},"name":"Concurrent","qualname":"::options::Concurrent","value":"Concurrent::{Yes, No}","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":732}],"decl_id":null,"docs":" Whether to execute tests concurrently or not\n","sig":null,"attributes":[{"value":"/ Whether to execute tests concurrently or not","span":{"file_name":"src/libtest/options.rs","byte_start":86769,"byte_end":86817,"line_start":3,"line_end":3,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":746},"span":{"file_name":"src/libtest/options.rs","byte_start":87012,"byte_end":87016,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Auto","qualname":"::options::BenchMode::Auto","value":"BenchMode::Auto","parent":{"krate":0,"index":745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":748},"span":{"file_name":"src/libtest/options.rs","byte_start":87022,"byte_end":87028,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"Single","qualname":"::options::BenchMode::Single","value":"BenchMode::Single","parent":{"krate":0,"index":745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":745},"span":{"file_name":"src/libtest/options.rs","byte_start":86996,"byte_end":87005,"line_start":12,"line_end":12,"column_start":10,"column_end":19},"name":"BenchMode","qualname":"::options::BenchMode","value":"BenchMode::{Auto, Single}","parent":null,"children":[{"krate":0,"index":746},{"krate":0,"index":748}],"decl_id":null,"docs":" Number of times to run a benchmarked function\n","sig":null,"attributes":[{"value":"/ Number of times to run a benchmarked function","span":{"file_name":"src/libtest/options.rs","byte_start":86905,"byte_end":86954,"line_start":10,"line_end":10,"column_start":1,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":759},"span":{"file_name":"src/libtest/options.rs","byte_start":87156,"byte_end":87158,"line_start":20,"line_end":20,"column_start":5,"column_end":7},"name":"No","qualname":"::options::ShouldPanic::No","value":"ShouldPanic::No","parent":{"krate":0,"index":758},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":761},"span":{"file_name":"src/libtest/options.rs","byte_start":87164,"byte_end":87167,"line_start":21,"line_end":21,"column_start":5,"column_end":8},"name":"Yes","qualname":"::options::ShouldPanic::Yes","value":"ShouldPanic::Yes","parent":{"krate":0,"index":758},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":763},"span":{"file_name":"src/libtest/options.rs","byte_start":87173,"byte_end":87187,"line_start":22,"line_end":22,"column_start":5,"column_end":19},"name":"YesWithMessage","qualname":"::options::ShouldPanic::YesWithMessage","value":"ShouldPanic::YesWithMessage(&'static str)","parent":{"krate":0,"index":758},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":758},"span":{"file_name":"src/libtest/options.rs","byte_start":87138,"byte_end":87149,"line_start":19,"line_end":19,"column_start":10,"column_end":21},"name":"ShouldPanic","qualname":"::options::ShouldPanic","value":"ShouldPanic::{No, Yes, YesWithMessage}","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":761},{"krate":0,"index":763}],"decl_id":null,"docs":" Whether test is expected to panic or not\n","sig":null,"attributes":[{"value":"/ Whether test is expected to panic or not","span":{"file_name":"src/libtest/options.rs","byte_start":87033,"byte_end":87077,"line_start":17,"line_end":17,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":782},"span":{"file_name":"src/libtest/options.rs","byte_start":87315,"byte_end":87324,"line_start":28,"line_end":28,"column_start":5,"column_end":14},"name":"AutoColor","qualname":"::options::ColorConfig::AutoColor","value":"ColorConfig::AutoColor","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":784},"span":{"file_name":"src/libtest/options.rs","byte_start":87330,"byte_end":87341,"line_start":29,"line_end":29,"column_start":5,"column_end":16},"name":"AlwaysColor","qualname":"::options::ColorConfig::AlwaysColor","value":"ColorConfig::AlwaysColor","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":786},"span":{"file_name":"src/libtest/options.rs","byte_start":87347,"byte_end":87357,"line_start":30,"line_end":30,"column_start":5,"column_end":15},"name":"NeverColor","qualname":"::options::ColorConfig::NeverColor","value":"ColorConfig::NeverColor","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":781},"span":{"file_name":"src/libtest/options.rs","byte_start":87297,"byte_end":87308,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"name":"ColorConfig","qualname":"::options::ColorConfig","value":"ColorConfig::{AutoColor, AlwaysColor, NeverColor}","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":784},{"krate":0,"index":786}],"decl_id":null,"docs":" Whether should console output be colored or not\n","sig":null,"attributes":[{"value":"/ Whether should console output be colored or not","span":{"file_name":"src/libtest/options.rs","byte_start":87206,"byte_end":87257,"line_start":25,"line_end":25,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":794},"span":{"file_name":"src/libtest/options.rs","byte_start":87496,"byte_end":87502,"line_start":37,"line_end":37,"column_start":5,"column_end":11},"name":"Pretty","qualname":"::options::OutputFormat::Pretty","value":"OutputFormat::Pretty","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":" Verbose output\n","sig":null,"attributes":[{"value":"/ Verbose output","span":{"file_name":"src/libtest/options.rs","byte_start":87473,"byte_end":87491,"line_start":36,"line_end":36,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":796},"span":{"file_name":"src/libtest/options.rs","byte_start":87529,"byte_end":87534,"line_start":39,"line_end":39,"column_start":5,"column_end":10},"name":"Terse","qualname":"::options::OutputFormat::Terse","value":"OutputFormat::Terse","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":" Quiet output\n","sig":null,"attributes":[{"value":"/ Quiet output","span":{"file_name":"src/libtest/options.rs","byte_start":87508,"byte_end":87524,"line_start":38,"line_end":38,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":798},"span":{"file_name":"src/libtest/options.rs","byte_start":87560,"byte_end":87564,"line_start":41,"line_end":41,"column_start":5,"column_end":9},"name":"Json","qualname":"::options::OutputFormat::Json","value":"OutputFormat::Json","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":" JSON output\n","sig":null,"attributes":[{"value":"/ JSON output","span":{"file_name":"src/libtest/options.rs","byte_start":87540,"byte_end":87555,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":793},"span":{"file_name":"src/libtest/options.rs","byte_start":87454,"byte_end":87466,"line_start":35,"line_end":35,"column_start":10,"column_end":22},"name":"OutputFormat","qualname":"::options::OutputFormat","value":"OutputFormat::{Pretty, Terse, Json}","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":796},{"krate":0,"index":798}],"decl_id":null,"docs":" Format of the test results output\n","sig":null,"attributes":[{"value":"/ Format of the test results output","span":{"file_name":"src/libtest/options.rs","byte_start":87362,"byte_end":87399,"line_start":33,"line_end":33,"column_start":1,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":812},"span":{"file_name":"src/libtest/options.rs","byte_start":87686,"byte_end":87689,"line_start":47,"line_end":47,"column_start":5,"column_end":8},"name":"Yes","qualname":"::options::RunIgnored::Yes","value":"RunIgnored::Yes","parent":{"krate":0,"index":811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":814},"span":{"file_name":"src/libtest/options.rs","byte_start":87695,"byte_end":87697,"line_start":48,"line_end":48,"column_start":5,"column_end":7},"name":"No","qualname":"::options::RunIgnored::No","value":"RunIgnored::No","parent":{"krate":0,"index":811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":816},"span":{"file_name":"src/libtest/options.rs","byte_start":87734,"byte_end":87738,"line_start":50,"line_end":50,"column_start":5,"column_end":9},"name":"Only","qualname":"::options::RunIgnored::Only","value":"RunIgnored::Only","parent":{"krate":0,"index":811},"children":[],"decl_id":null,"docs":" Run only ignored tests\n","sig":null,"attributes":[{"value":"/ Run only ignored tests","span":{"file_name":"src/libtest/options.rs","byte_start":87703,"byte_end":87729,"line_start":49,"line_end":49,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":811},"span":{"file_name":"src/libtest/options.rs","byte_start":87669,"byte_end":87679,"line_start":46,"line_end":46,"column_start":10,"column_end":20},"name":"RunIgnored","qualname":"::options::RunIgnored","value":"RunIgnored::{Yes, No, Only}","parent":null,"children":[{"krate":0,"index":812},{"krate":0,"index":814},{"krate":0,"index":816}],"decl_id":null,"docs":" Whether ignored test should be run or not\n","sig":null,"attributes":[{"value":"/ Whether ignored test should be run or not","span":{"file_name":"src/libtest/options.rs","byte_start":87569,"byte_end":87614,"line_start":44,"line_end":44,"column_start":1,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":830},"span":{"file_name":"src/libtest/options.rs","byte_start":87900,"byte_end":87909,"line_start":57,"line_end":57,"column_start":5,"column_end":14},"name":"InProcess","qualname":"::options::RunStrategy::InProcess","value":"RunStrategy::InProcess","parent":{"krate":0,"index":829},"children":[],"decl_id":null,"docs":" Runs the test in the current process, and sends the result back over the\n supplied channel.\n","sig":null,"attributes":[{"value":"/ Runs the test in the current process, and sends the result back over the","span":{"file_name":"src/libtest/options.rs","byte_start":87793,"byte_end":87869,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ supplied channel.","span":{"file_name":"src/libtest/options.rs","byte_start":87874,"byte_end":87895,"line_start":56,"line_end":56,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":832},"span":{"file_name":"src/libtest/options.rs","byte_start":88108,"byte_end":88120,"line_start":62,"line_end":62,"column_start":5,"column_end":17},"name":"SpawnPrimary","qualname":"::options::RunStrategy::SpawnPrimary","value":"RunStrategy::SpawnPrimary","parent":{"krate":0,"index":829},"children":[],"decl_id":null,"docs":" Spawns a subprocess to run the test, and sends the result back over the\n supplied channel. Requires `argv[0]` to exist and point to the binary\n that's currently running.\n","sig":null,"attributes":[{"value":"/ Spawns a subprocess to run the test, and sends the result back over the","span":{"file_name":"src/libtest/options.rs","byte_start":87916,"byte_end":87991,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ supplied channel. Requires `argv[0]` to exist and point to the binary","span":{"file_name":"src/libtest/options.rs","byte_start":87996,"byte_end":88069,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that's currently running.","span":{"file_name":"src/libtest/options.rs","byte_start":88074,"byte_end":88103,"line_start":61,"line_end":61,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":829},"span":{"file_name":"src/libtest/options.rs","byte_start":87775,"byte_end":87786,"line_start":54,"line_end":54,"column_start":10,"column_end":21},"name":"RunStrategy","qualname":"::options::RunStrategy","value":"RunStrategy::{InProcess, SpawnPrimary}","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":832}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":837},"span":{"file_name":"src/libtest/options.rs","byte_start":88325,"byte_end":88332,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"Options","qualname":"::options::Options","value":"Options { display_output, panic_abort }","parent":null,"children":[{"krate":0,"index":838},{"krate":0,"index":839}],"decl_id":null,"docs":" Options for the test run defined by the caller (instead of CLI arguments).\n In case we want to add other options as well, just add them in this struct.\n","sig":null,"attributes":[{"value":"/ Options for the test run defined by the caller (instead of CLI arguments).","span":{"file_name":"src/libtest/options.rs","byte_start":88125,"byte_end":88203,"line_start":65,"line_end":65,"column_start":1,"column_end":79}},{"value":"/ In case we want to add other options as well, just add them in this struct.","span":{"file_name":"src/libtest/options.rs","byte_start":88204,"byte_end":88283,"line_start":66,"line_end":66,"column_start":1,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":838},"span":{"file_name":"src/libtest/options.rs","byte_start":88343,"byte_end":88357,"line_start":69,"line_end":69,"column_start":9,"column_end":23},"name":"display_output","qualname":"::options::Options::display_output","value":"bool","parent":{"krate":0,"index":837},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":839},"span":{"file_name":"src/libtest/options.rs","byte_start":88373,"byte_end":88384,"line_start":70,"line_end":70,"column_start":9,"column_end":20},"name":"panic_abort","qualname":"::options::Options::panic_abort","value":"bool","parent":{"krate":0,"index":837},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"src/libtest/options.rs","byte_start":88421,"byte_end":88424,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"new","qualname":"<Options>::new","value":"fn () -> Options","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"src/libtest/options.rs","byte_start":88520,"byte_end":88534,"line_start":78,"line_end":78,"column_start":12,"column_end":26},"name":"display_output","qualname":"<Options>::display_output","value":"fn (mut self, display_output: bool) -> Options","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"src/libtest/options.rs","byte_start":88657,"byte_end":88668,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"panic_abort","qualname":"<Options>::panic_abort","value":"fn (mut self, panic_abort: bool) -> Options","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":427},"span":{"file_name":"src/libtest/stats.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stats","qualname":"::stats","value":"src/libtest/stats.rs","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":437},{"krate":0,"index":845},{"krate":0,"index":865},{"krate":0,"index":863},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":858},{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":471},{"krate":0,"index":472}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"src/libtest/stats.rs","byte_start":88773,"byte_end":88796,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"allow(deprecated)","span":{"file_name":"src/libtest/stats.rs","byte_start":88797,"byte_end":88818,"line_start":2,"line_end":2,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":437},"span":{"file_name":"src/libtest/stats.rs","byte_start":89407,"byte_end":89412,"line_start":30,"line_end":30,"column_start":11,"column_end":16},"name":"Stats","qualname":"::stats::Stats","value":"Stats","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450}],"decl_id":null,"docs":" Trait that provides simple descriptive statistics on a univariate set of numeric samples.\n","sig":null,"attributes":[{"value":"/ Trait that provides simple descriptive statistics on a univariate set of numeric samples.","span":{"file_name":"src/libtest/stats.rs","byte_start":89303,"byte_end":89396,"line_start":29,"line_end":29,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"src/libtest/stats.rs","byte_start":89803,"byte_end":89806,"line_start":39,"line_end":39,"column_start":8,"column_end":11},"name":"sum","qualname":"::stats::Stats::sum","value":"fn (&self) -> f64","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Sum of the samples.","sig":null,"attributes":[{"value":"/ Sum of the samples.","span":{"file_name":"src/libtest/stats.rs","byte_start":89419,"byte_end":89442,"line_start":31,"line_end":31,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":89447,"byte_end":89450,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Note: this method sacrifices performance at the altar of accuracy","span":{"file_name":"src/libtest/stats.rs","byte_start":89455,"byte_end":89524,"line_start":33,"line_end":33,"column_start":5,"column_end":74}},{"value":"/ Depends on IEEE-754 arithmetic guarantees. See proof of correctness at:","span":{"file_name":"src/libtest/stats.rs","byte_start":89529,"byte_end":89604,"line_start":34,"line_end":34,"column_start":5,"column_end":80}},{"value":"/ [\"Adaptive Precision Floating-Point Arithmetic and Fast Robust Geometric","span":{"file_name":"src/libtest/stats.rs","byte_start":89609,"byte_end":89685,"line_start":35,"line_end":35,"column_start":5,"column_end":81}},{"value":"/ Predicates\"][paper]","span":{"file_name":"src/libtest/stats.rs","byte_start":89690,"byte_end":89713,"line_start":36,"line_end":36,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":89718,"byte_end":89721,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ [paper]: http://www.cs.cmu.edu/~quake-papers/robust-arithmetic.ps","span":{"file_name":"src/libtest/stats.rs","byte_start":89726,"byte_end":89795,"line_start":38,"line_end":38,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"src/libtest/stats.rs","byte_start":89868,"byte_end":89871,"line_start":42,"line_end":42,"column_start":8,"column_end":11},"name":"min","qualname":"::stats::Stats::min","value":"fn (&self) -> f64","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Minimum value of the samples.\n","sig":null,"attributes":[{"value":"/ Minimum value of the samples.","span":{"file_name":"src/libtest/stats.rs","byte_start":89827,"byte_end":89860,"line_start":41,"line_end":41,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"src/libtest/stats.rs","byte_start":89933,"byte_end":89936,"line_start":45,"line_end":45,"column_start":8,"column_end":11},"name":"max","qualname":"::stats::Stats::max","value":"fn (&self) -> f64","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Maximum value of the samples.\n","sig":null,"attributes":[{"value":"/ Maximum value of the samples.","span":{"file_name":"src/libtest/stats.rs","byte_start":89892,"byte_end":89925,"line_start":44,"line_end":44,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"src/libtest/stats.rs","byte_start":90108,"byte_end":90112,"line_start":50,"line_end":50,"column_start":8,"column_end":12},"name":"mean","qualname":"::stats::Stats::mean","value":"fn (&self) -> f64","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Arithmetic mean (average) of the samples: sum divided by sample-count.","sig":null,"attributes":[{"value":"/ Arithmetic mean (average) of the samples: sum divided by sample-count.","span":{"file_name":"src/libtest/stats.rs","byte_start":89957,"byte_end":90031,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":90036,"byte_end":90039,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ See: <https://en.wikipedia.org/wiki/Arithmetic_mean>","span":{"file_name":"src/libtest/stats.rs","byte_start":90044,"byte_end":90100,"line_start":49,"line_end":49,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"src/libtest/stats.rs","byte_start":90338,"byte_end":90344,"line_start":56,"line_end":56,"column_start":8,"column_end":14},"name":"median","qualname":"::stats::Stats::median","value":"fn (&self) -> f64","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Median of the samples: value separating the lower half of the samples from the higher half.\n Equal to `self.percentile(50.0)`.","sig":null,"attributes":[{"value":"/ Median of the samples: value separating the lower half of the samples from the higher half.","span":{"file_name":"src/libtest/stats.rs","byte_start":90133,"byte_end":90228,"line_start":52,"line_end":52,"column_start":5,"column_end":100}},{"value":"/ Equal to `self.percentile(50.0)`.","span":{"file_name":"src/libtest/stats.rs","byte_start":90233,"byte_end":90270,"line_start":53,"line_end":53,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":90275,"byte_end":90278,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ See: <https://en.wikipedia.org/wiki/Median>","span":{"file_name":"src/libtest/stats.rs","byte_start":90283,"byte_end":90330,"line_start":55,"line_end":55,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"src/libtest/stats.rs","byte_start":90842,"byte_end":90845,"line_start":65,"line_end":65,"column_start":8,"column_end":11},"name":"var","qualname":"::stats::Stats::var","value":"fn (&self) -> f64","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Variance of the samples: bias-corrected mean of the squares of the differences of each\n sample from the sample mean. Note that this calculates the _sample variance_ rather than the\n population variance, which is assumed to be unknown. It therefore corrects the `(n-1)/n`\n bias that would appear if we calculated a population variance, by dividing by `(n-1)` rather\n than `n`.","sig":null,"attributes":[{"value":"/ Variance of the samples: bias-corrected mean of the squares of the differences of each","span":{"file_name":"src/libtest/stats.rs","byte_start":90365,"byte_end":90455,"line_start":58,"line_end":58,"column_start":5,"column_end":95}},{"value":"/ sample from the sample mean. Note that this calculates the _sample variance_ rather than the","span":{"file_name":"src/libtest/stats.rs","byte_start":90460,"byte_end":90556,"line_start":59,"line_end":59,"column_start":5,"column_end":101}},{"value":"/ population variance, which is assumed to be unknown. It therefore corrects the `(n-1)/n`","span":{"file_name":"src/libtest/stats.rs","byte_start":90561,"byte_end":90653,"line_start":60,"line_end":60,"column_start":5,"column_end":97}},{"value":"/ bias that would appear if we calculated a population variance, by dividing by `(n-1)` rather","span":{"file_name":"src/libtest/stats.rs","byte_start":90658,"byte_end":90754,"line_start":61,"line_end":61,"column_start":5,"column_end":101}},{"value":"/ than `n`.","span":{"file_name":"src/libtest/stats.rs","byte_start":90759,"byte_end":90772,"line_start":62,"line_end":62,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":90777,"byte_end":90780,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ See: <https://en.wikipedia.org/wiki/Variance>","span":{"file_name":"src/libtest/stats.rs","byte_start":90785,"byte_end":90834,"line_start":64,"line_end":64,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"src/libtest/stats.rs","byte_start":91155,"byte_end":91162,"line_start":73,"line_end":73,"column_start":8,"column_end":15},"name":"std_dev","qualname":"::stats::Stats::std_dev","value":"fn (&self) -> f64","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Standard deviation: the square root of the sample variance.","sig":null,"attributes":[{"value":"/ Standard deviation: the square root of the sample variance.","span":{"file_name":"src/libtest/stats.rs","byte_start":90866,"byte_end":90929,"line_start":67,"line_end":67,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":90934,"byte_end":90937,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Note: this is not a robust statistic for non-normal distributions. Prefer the","span":{"file_name":"src/libtest/stats.rs","byte_start":90942,"byte_end":91023,"line_start":69,"line_end":69,"column_start":5,"column_end":86}},{"value":"/ `median_abs_dev` for unknown distributions.","span":{"file_name":"src/libtest/stats.rs","byte_start":91028,"byte_end":91075,"line_start":70,"line_end":70,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":91080,"byte_end":91083,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ See: <https://en.wikipedia.org/wiki/Standard_deviation>","span":{"file_name":"src/libtest/stats.rs","byte_start":91088,"byte_end":91147,"line_start":72,"line_end":72,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"src/libtest/stats.rs","byte_start":91421,"byte_end":91432,"line_start":79,"line_end":79,"column_start":8,"column_end":19},"name":"std_dev_pct","qualname":"::stats::Stats::std_dev_pct","value":"fn (&self) -> f64","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Standard deviation as a percent of the mean value. See `std_dev` and `mean`.","sig":null,"attributes":[{"value":"/ Standard deviation as a percent of the mean value. See `std_dev` and `mean`.","span":{"file_name":"src/libtest/stats.rs","byte_start":91183,"byte_end":91263,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":91268,"byte_end":91271,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note: this is not a robust statistic for non-normal distributions. Prefer the","span":{"file_name":"src/libtest/stats.rs","byte_start":91276,"byte_end":91357,"line_start":77,"line_end":77,"column_start":5,"column_end":86}},{"value":"/ `median_abs_dev_pct` for unknown distributions.","span":{"file_name":"src/libtest/stats.rs","byte_start":91362,"byte_end":91413,"line_start":78,"line_end":78,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"src/libtest/stats.rs","byte_start":91943,"byte_end":91957,"line_start":88,"line_end":88,"column_start":8,"column_end":22},"name":"median_abs_dev","qualname":"::stats::Stats::median_abs_dev","value":"fn (&self) -> f64","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Scaled median of the absolute deviations of each sample from the sample median. This is a\n robust (distribution-agnostic) estimator of sample variability. Use this in preference to\n `std_dev` if you cannot assume your sample is normally distributed. Note that this is scaled\n by the constant `1.4826` to allow its use as a consistent estimator for the standard\n deviation.","sig":null,"attributes":[{"value":"/ Scaled median of the absolute deviations of each sample from the sample median. This is a","span":{"file_name":"src/libtest/stats.rs","byte_start":91453,"byte_end":91546,"line_start":81,"line_end":81,"column_start":5,"column_end":98}},{"value":"/ robust (distribution-agnostic) estimator of sample variability. Use this in preference to","span":{"file_name":"src/libtest/stats.rs","byte_start":91551,"byte_end":91644,"line_start":82,"line_end":82,"column_start":5,"column_end":98}},{"value":"/ `std_dev` if you cannot assume your sample is normally distributed. Note that this is scaled","span":{"file_name":"src/libtest/stats.rs","byte_start":91649,"byte_end":91745,"line_start":83,"line_end":83,"column_start":5,"column_end":101}},{"value":"/ by the constant `1.4826` to allow its use as a consistent estimator for the standard","span":{"file_name":"src/libtest/stats.rs","byte_start":91750,"byte_end":91838,"line_start":84,"line_end":84,"column_start":5,"column_end":93}},{"value":"/ deviation.","span":{"file_name":"src/libtest/stats.rs","byte_start":91843,"byte_end":91857,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":91862,"byte_end":91865,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ See: <http://en.wikipedia.org/wiki/Median_absolute_deviation>","span":{"file_name":"src/libtest/stats.rs","byte_start":91870,"byte_end":91935,"line_start":87,"line_end":87,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"src/libtest/stats.rs","byte_start":92078,"byte_end":92096,"line_start":91,"line_end":91,"column_start":8,"column_end":26},"name":"median_abs_dev_pct","qualname":"::stats::Stats::median_abs_dev_pct","value":"fn (&self) -> f64","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Median absolute deviation as a percent of the median. See `median_abs_dev` and `median`.\n","sig":null,"attributes":[{"value":"/ Median absolute deviation as a percent of the median. See `median_abs_dev` and `median`.","span":{"file_name":"src/libtest/stats.rs","byte_start":91978,"byte_end":92070,"line_start":90,"line_end":90,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"src/libtest/stats.rs","byte_start":92476,"byte_end":92486,"line_start":100,"line_end":100,"column_start":8,"column_end":18},"name":"percentile","qualname":"::stats::Stats::percentile","value":"fn (&self, pct: f64) -> f64","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Percentile: the value below which `pct` percent of the values in `self` fall. For example,\n percentile(95.0) will return the value `v` such that 95% of the samples `s` in `self`\n satisfy `s <= v`.","sig":null,"attributes":[{"value":"/ Percentile: the value below which `pct` percent of the values in `self` fall. For example,","span":{"file_name":"src/libtest/stats.rs","byte_start":92117,"byte_end":92211,"line_start":93,"line_end":93,"column_start":5,"column_end":99}},{"value":"/ percentile(95.0) will return the value `v` such that 95% of the samples `s` in `self`","span":{"file_name":"src/libtest/stats.rs","byte_start":92216,"byte_end":92305,"line_start":94,"line_end":94,"column_start":5,"column_end":94}},{"value":"/ satisfy `s <= v`.","span":{"file_name":"src/libtest/stats.rs","byte_start":92310,"byte_end":92331,"line_start":95,"line_end":95,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":92336,"byte_end":92339,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Calculated by linear interpolation between closest ranks.","span":{"file_name":"src/libtest/stats.rs","byte_start":92344,"byte_end":92405,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":92410,"byte_end":92413,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ See: <http://en.wikipedia.org/wiki/Percentile>","span":{"file_name":"src/libtest/stats.rs","byte_start":92418,"byte_end":92468,"line_start":99,"line_end":99,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"src/libtest/stats.rs","byte_start":92914,"byte_end":92923,"line_start":108,"line_end":108,"column_start":8,"column_end":17},"name":"quartiles","qualname":"::stats::Stats::quartiles","value":"fn (&self) -> (f64, f64, f64)","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Quartiles of the sample: three values that divide the sample into four equal groups, each\n with 1/4 of the data. The middle value is the median. See `median` and `percentile`. This\n function may calculate the 3 quartiles more efficiently than 3 calls to `percentile`, but\n is otherwise equivalent.","sig":null,"attributes":[{"value":"/ Quartiles of the sample: three values that divide the sample into four equal groups, each","span":{"file_name":"src/libtest/stats.rs","byte_start":92517,"byte_end":92610,"line_start":102,"line_end":102,"column_start":5,"column_end":98}},{"value":"/ with 1/4 of the data. The middle value is the median. See `median` and `percentile`. This","span":{"file_name":"src/libtest/stats.rs","byte_start":92615,"byte_end":92708,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ function may calculate the 3 quartiles more efficiently than 3 calls to `percentile`, but","span":{"file_name":"src/libtest/stats.rs","byte_start":92713,"byte_end":92806,"line_start":104,"line_end":104,"column_start":5,"column_end":98}},{"value":"/ is otherwise equivalent.","span":{"file_name":"src/libtest/stats.rs","byte_start":92811,"byte_end":92839,"line_start":105,"line_end":105,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":92844,"byte_end":92847,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ See also: <https://en.wikipedia.org/wiki/Quartile>","span":{"file_name":"src/libtest/stats.rs","byte_start":92852,"byte_end":92906,"line_start":107,"line_end":107,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"src/libtest/stats.rs","byte_start":93190,"byte_end":93193,"line_start":114,"line_end":114,"column_start":8,"column_end":11},"name":"iqr","qualname":"::stats::Stats::iqr","value":"fn (&self) -> f64","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Inter-quartile range: the difference between the 25th percentile (1st quartile) and the 75th\n percentile (3rd quartile). See `quartiles`.","sig":null,"attributes":[{"value":"/ Inter-quartile range: the difference between the 25th percentile (1st quartile) and the 75th","span":{"file_name":"src/libtest/stats.rs","byte_start":92956,"byte_end":93052,"line_start":110,"line_end":110,"column_start":5,"column_end":101}},{"value":"/ percentile (3rd quartile). See `quartiles`.","span":{"file_name":"src/libtest/stats.rs","byte_start":93057,"byte_end":93104,"line_start":111,"line_end":111,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":93109,"byte_end":93112,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ See also: <https://en.wikipedia.org/wiki/Interquartile_range>","span":{"file_name":"src/libtest/stats.rs","byte_start":93117,"byte_end":93182,"line_start":113,"line_end":113,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":845},"span":{"file_name":"src/libtest/stats.rs","byte_start":93359,"byte_end":93366,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"Summary","qualname":"::stats::Summary","value":"Summary { sum, min, max, mean, median, var, std_dev, std_dev_pct, median_abs_dev, median_abs_dev_pct, quartiles, iqr }","parent":null,"children":[{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857}],"decl_id":null,"docs":" Extracted collection of all the summary statistics of a sample set.\n","sig":null,"attributes":[{"value":"/ Extracted collection of all the summary statistics of a sample set.","span":{"file_name":"src/libtest/stats.rs","byte_start":93212,"byte_end":93283,"line_start":117,"line_end":117,"column_start":1,"column_end":72}},{"value":"allow(missing_docs)","span":{"file_name":"src/libtest/stats.rs","byte_start":93325,"byte_end":93347,"line_start":119,"line_end":119,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":846},"span":{"file_name":"src/libtest/stats.rs","byte_start":93377,"byte_end":93380,"line_start":121,"line_end":121,"column_start":9,"column_end":12},"name":"sum","qualname":"::stats::Summary::sum","value":"f64","parent":{"krate":0,"index":845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":847},"span":{"file_name":"src/libtest/stats.rs","byte_start":93395,"byte_end":93398,"line_start":122,"line_end":122,"column_start":9,"column_end":12},"name":"min","qualname":"::stats::Summary::min","value":"f64","parent":{"krate":0,"index":845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":848},"span":{"file_name":"src/libtest/stats.rs","byte_start":93413,"byte_end":93416,"line_start":123,"line_end":123,"column_start":9,"column_end":12},"name":"max","qualname":"::stats::Summary::max","value":"f64","parent":{"krate":0,"index":845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":849},"span":{"file_name":"src/libtest/stats.rs","byte_start":93431,"byte_end":93435,"line_start":124,"line_end":124,"column_start":9,"column_end":13},"name":"mean","qualname":"::stats::Summary::mean","value":"f64","parent":{"krate":0,"index":845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":850},"span":{"file_name":"src/libtest/stats.rs","byte_start":93450,"byte_end":93456,"line_start":125,"line_end":125,"column_start":9,"column_end":15},"name":"median","qualname":"::stats::Summary::median","value":"f64","parent":{"krate":0,"index":845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":851},"span":{"file_name":"src/libtest/stats.rs","byte_start":93471,"byte_end":93474,"line_start":126,"line_end":126,"column_start":9,"column_end":12},"name":"var","qualname":"::stats::Summary::var","value":"f64","parent":{"krate":0,"index":845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":852},"span":{"file_name":"src/libtest/stats.rs","byte_start":93489,"byte_end":93496,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"name":"std_dev","qualname":"::stats::Summary::std_dev","value":"f64","parent":{"krate":0,"index":845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":853},"span":{"file_name":"src/libtest/stats.rs","byte_start":93511,"byte_end":93522,"line_start":128,"line_end":128,"column_start":9,"column_end":20},"name":"std_dev_pct","qualname":"::stats::Summary::std_dev_pct","value":"f64","parent":{"krate":0,"index":845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":854},"span":{"file_name":"src/libtest/stats.rs","byte_start":93537,"byte_end":93551,"line_start":129,"line_end":129,"column_start":9,"column_end":23},"name":"median_abs_dev","qualname":"::stats::Summary::median_abs_dev","value":"f64","parent":{"krate":0,"index":845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":855},"span":{"file_name":"src/libtest/stats.rs","byte_start":93566,"byte_end":93584,"line_start":130,"line_end":130,"column_start":9,"column_end":27},"name":"median_abs_dev_pct","qualname":"::stats::Summary::median_abs_dev_pct","value":"f64","parent":{"krate":0,"index":845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":856},"span":{"file_name":"src/libtest/stats.rs","byte_start":93599,"byte_end":93608,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"quartiles","qualname":"::stats::Summary::quartiles","value":"(f64, f64, f64)","parent":{"krate":0,"index":845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":857},"span":{"file_name":"src/libtest/stats.rs","byte_start":93635,"byte_end":93638,"line_start":132,"line_end":132,"column_start":9,"column_end":12},"name":"iqr","qualname":"::stats::Summary::iqr","value":"f64","parent":{"krate":0,"index":845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"src/libtest/stats.rs","byte_start":93723,"byte_end":93726,"line_start":137,"line_end":137,"column_start":12,"column_end":15},"name":"new","qualname":"<Summary>::new","value":"fn (samples: &[f64]) -> Summary","parent":null,"children":[],"decl_id":null,"docs":" Construct a new summary of a sample set.\n","sig":null,"attributes":[{"value":"/ Construct a new summary of a sample set.","span":{"file_name":"src/libtest/stats.rs","byte_start":93667,"byte_end":93711,"line_start":136,"line_end":136,"column_start":5,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":472},"span":{"file_name":"src/libtest/stats.rs","byte_start":99027,"byte_end":99036,"line_start":306,"line_end":306,"column_start":8,"column_end":17},"name":"winsorize","qualname":"::stats::winsorize","value":"fn (samples: &mut [f64], pct: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Winsorize a set of samples, replacing values above the `100-pct` percentile\n and below the `pct` percentile with those percentiles themselves. This is a\n way of minimizing the effect of outliers, at the cost of biasing the sample.\n It differs from trimming in that it does not change the number of samples,\n just changes the values of those that are outliers.","sig":null,"attributes":[{"value":"/ Winsorize a set of samples, replacing values above the `100-pct` percentile","span":{"file_name":"src/libtest/stats.rs","byte_start":98588,"byte_end":98667,"line_start":299,"line_end":299,"column_start":1,"column_end":80}},{"value":"/ and below the `pct` percentile with those percentiles themselves. This is a","span":{"file_name":"src/libtest/stats.rs","byte_start":98668,"byte_end":98747,"line_start":300,"line_end":300,"column_start":1,"column_end":80}},{"value":"/ way of minimizing the effect of outliers, at the cost of biasing the sample.","span":{"file_name":"src/libtest/stats.rs","byte_start":98748,"byte_end":98828,"line_start":301,"line_end":301,"column_start":1,"column_end":81}},{"value":"/ It differs from trimming in that it does not change the number of samples,","span":{"file_name":"src/libtest/stats.rs","byte_start":98829,"byte_end":98907,"line_start":302,"line_end":302,"column_start":1,"column_end":79}},{"value":"/ just changes the values of those that are outliers.","span":{"file_name":"src/libtest/stats.rs","byte_start":98908,"byte_end":98963,"line_start":303,"line_end":303,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"src/libtest/stats.rs","byte_start":98964,"byte_end":98967,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ See: <http://en.wikipedia.org/wiki/Winsorising>","span":{"file_name":"src/libtest/stats.rs","byte_start":98968,"byte_end":99019,"line_start":305,"line_end":305,"column_start":1,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":480},"span":{"file_name":"src/libtest/test_result.rs","byte_start":99712,"byte_end":99717,"line_start":13,"line_end":13,"column_start":11,"column_end":16},"name":"TR_OK","qualname":"::test_result::TR_OK","value":"i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":481},"span":{"file_name":"src/libtest/test_result.rs","byte_start":99739,"byte_end":99748,"line_start":14,"line_end":14,"column_start":11,"column_end":20},"name":"TR_FAILED","qualname":"::test_result::TR_FAILED","value":"i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":868},"span":{"file_name":"src/libtest/test_result.rs","byte_start":99822,"byte_end":99826,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"TrOk","qualname":"::test_result::TestResult::TrOk","value":"TestResult::TrOk","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":870},"span":{"file_name":"src/libtest/test_result.rs","byte_start":99832,"byte_end":99840,"line_start":19,"line_end":19,"column_start":5,"column_end":13},"name":"TrFailed","qualname":"::test_result::TestResult::TrFailed","value":"TestResult::TrFailed","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":872},"span":{"file_name":"src/libtest/test_result.rs","byte_start":99846,"byte_end":99857,"line_start":20,"line_end":20,"column_start":5,"column_end":16},"name":"TrFailedMsg","qualname":"::test_result::TestResult::TrFailedMsg","value":"TestResult::TrFailedMsg(String)","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":875},"span":{"file_name":"src/libtest/test_result.rs","byte_start":99871,"byte_end":99880,"line_start":21,"line_end":21,"column_start":5,"column_end":14},"name":"TrIgnored","qualname":"::test_result::TestResult::TrIgnored","value":"TestResult::TrIgnored","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":877},"span":{"file_name":"src/libtest/test_result.rs","byte_start":99886,"byte_end":99899,"line_start":22,"line_end":22,"column_start":5,"column_end":18},"name":"TrAllowedFail","qualname":"::test_result::TestResult::TrAllowedFail","value":"TestResult::TrAllowedFail","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":879},"span":{"file_name":"src/libtest/test_result.rs","byte_start":99905,"byte_end":99912,"line_start":23,"line_end":23,"column_start":5,"column_end":12},"name":"TrBench","qualname":"::test_result::TestResult::TrBench","value":"TestResult::TrBench(BenchSamples)","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":882},"span":{"file_name":"src/libtest/test_result.rs","byte_start":99932,"byte_end":99943,"line_start":24,"line_end":24,"column_start":5,"column_end":16},"name":"TrTimedFail","qualname":"::test_result::TestResult::TrTimedFail","value":"TestResult::TrTimedFail","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":867},"span":{"file_name":"src/libtest/test_result.rs","byte_start":99805,"byte_end":99815,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"name":"TestResult","qualname":"::test_result::TestResult","value":"TestResult::{TrOk, TrFailed, TrFailedMsg, TrIgnored, TrAllowedFail, TrBench, TrTimedFail}","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":870},{"krate":0,"index":872},{"krate":0,"index":875},{"krate":0,"index":877},{"krate":0,"index":879},{"krate":0,"index":882}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":483},"span":{"file_name":"src/libtest/test_result.rs","byte_start":100089,"byte_end":100100,"line_start":31,"line_end":31,"column_start":8,"column_end":19},"name":"calc_result","qualname":"::test_result::calc_result","value":"fn <'a> (desc: &TestDesc, task_result: Result<(), &'a (dyn Any + 'static + Send)>, time_opts: &Option<time::TestTimeOptions>, exec_time: &Option<time::TestExecTime>) -> TestResult","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TestResult` depending on the raw result of test execution\n and associated data.\n","sig":null,"attributes":[{"value":"/ Creates a `TestResult` depending on the raw result of test execution","span":{"file_name":"src/libtest/test_result.rs","byte_start":99984,"byte_end":100056,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ and associated data.","span":{"file_name":"src/libtest/test_result.rs","byte_start":100057,"byte_end":100081,"line_start":30,"line_end":30,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":488},"span":{"file_name":"src/libtest/test_result.rs","byte_start":102181,"byte_end":102206,"line_start":89,"line_end":89,"column_start":8,"column_end":33},"name":"get_result_from_exit_code","qualname":"::test_result::get_result_from_exit_code","value":"fn (desc: &TestDesc, code: i32, time_opts: &Option<time::TestTimeOptions>, exec_time: &Option<time::TestExecTime>) -> TestResult","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TestResult` depending on the exit code of test subprocess.\n","sig":null,"attributes":[{"value":"/ Creates a `TestResult` depending on the exit code of test subprocess.","span":{"file_name":"src/libtest/test_result.rs","byte_start":102100,"byte_end":102173,"line_start":88,"line_end":88,"column_start":1,"column_end":74}}]},{"kind":"Const","id":{"krate":0,"index":499},"span":{"file_name":"src/libtest/time.rs","byte_start":103431,"byte_end":103450,"line_start":14,"line_end":14,"column_start":11,"column_end":30},"name":"TEST_WARN_TIMEOUT_S","qualname":"::time::TEST_WARN_TIMEOUT_S","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":500},"span":{"file_name":"src/libtest/time.rs","byte_start":104016,"byte_end":104030,"line_start":25,"line_end":25,"column_start":9,"column_end":23},"name":"time_constants","qualname":"::time::time_constants","value":"src/libtest/time.rs","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513}],"decl_id":null,"docs":" This small module contains constants used by `report-time` option.\n Those constants values will be used if corresponding environment variables are not set.","sig":null,"attributes":[{"value":"/ This small module contains constants used by `report-time` option.","span":{"file_name":"src/libtest/time.rs","byte_start":103463,"byte_end":103533,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/ Those constants values will be used if corresponding environment variables are not set.","span":{"file_name":"src/libtest/time.rs","byte_start":103534,"byte_end":103625,"line_start":17,"line_end":17,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"src/libtest/time.rs","byte_start":103626,"byte_end":103629,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ To override values for unit-tests, use a constant `RUST_TEST_TIME_UNIT`,","span":{"file_name":"src/libtest/time.rs","byte_start":103630,"byte_end":103706,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ To override values for integration tests, use a constant `RUST_TEST_TIME_INTEGRATION`,","span":{"file_name":"src/libtest/time.rs","byte_start":103707,"byte_end":103797,"line_start":20,"line_end":20,"column_start":1,"column_end":91}},{"value":"/ To override values for doctests, use a constant `RUST_TEST_TIME_DOCTEST`.","span":{"file_name":"src/libtest/time.rs","byte_start":103798,"byte_end":103875,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"src/libtest/time.rs","byte_start":103876,"byte_end":103879,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Example of the expected format is `RUST_TEST_TIME_xxx=100,200`, where 100 means","span":{"file_name":"src/libtest/time.rs","byte_start":103880,"byte_end":103963,"line_start":23,"line_end":23,"column_start":1,"column_end":84}},{"value":"/ warn time, and 200 means critical time.","span":{"file_name":"src/libtest/time.rs","byte_start":103964,"byte_end":104007,"line_start":24,"line_end":24,"column_start":1,"column_end":44}}]},{"kind":"Const","id":{"krate":0,"index":503},"span":{"file_name":"src/libtest/time.rs","byte_start":104191,"byte_end":104204,"line_start":30,"line_end":30,"column_start":15,"column_end":28},"name":"UNIT_ENV_NAME","qualname":"::time::time_constants::UNIT_ENV_NAME","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Environment variable for overriding default threshold for unit-tests.\n","sig":null,"attributes":[{"value":"/ Environment variable for overriding default threshold for unit-tests.","span":{"file_name":"src/libtest/time.rs","byte_start":104103,"byte_end":104176,"line_start":29,"line_end":29,"column_start":5,"column_end":78}}]},{"kind":"Const","id":{"krate":0,"index":504},"span":{"file_name":"src/libtest/time.rs","byte_start":104302,"byte_end":104311,"line_start":33,"line_end":33,"column_start":15,"column_end":24},"name":"UNIT_WARN","qualname":"::time::time_constants::UNIT_WARN","value":"Duration","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":505},"span":{"file_name":"src/libtest/time.rs","byte_start":104365,"byte_end":104378,"line_start":34,"line_end":34,"column_start":15,"column_end":28},"name":"UNIT_CRITICAL","qualname":"::time::time_constants::UNIT_CRITICAL","value":"Duration","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":506},"span":{"file_name":"src/libtest/time.rs","byte_start":104512,"byte_end":104532,"line_start":37,"line_end":37,"column_start":15,"column_end":35},"name":"INTEGRATION_ENV_NAME","qualname":"::time::time_constants::INTEGRATION_ENV_NAME","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Environment variable for overriding default threshold for unit-tests.\n","sig":null,"attributes":[{"value":"/ Environment variable for overriding default threshold for unit-tests.","span":{"file_name":"src/libtest/time.rs","byte_start":104424,"byte_end":104497,"line_start":36,"line_end":36,"column_start":5,"column_end":78}}]},{"kind":"Const","id":{"krate":0,"index":507},"span":{"file_name":"src/libtest/time.rs","byte_start":104671,"byte_end":104687,"line_start":40,"line_end":40,"column_start":15,"column_end":31},"name":"INTEGRATION_WARN","qualname":"::time::time_constants::INTEGRATION_WARN","value":"Duration","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":508},"span":{"file_name":"src/libtest/time.rs","byte_start":104742,"byte_end":104762,"line_start":41,"line_end":41,"column_start":15,"column_end":35},"name":"INTEGRATION_CRITICAL","qualname":"::time::time_constants::INTEGRATION_CRITICAL","value":"Duration","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":509},"span":{"file_name":"src/libtest/time.rs","byte_start":104897,"byte_end":104913,"line_start":44,"line_end":44,"column_start":15,"column_end":31},"name":"DOCTEST_ENV_NAME","qualname":"::time::time_constants::DOCTEST_ENV_NAME","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Environment variable for overriding default threshold for unit-tests.\n","sig":null,"attributes":[{"value":"/ Environment variable for overriding default threshold for unit-tests.","span":{"file_name":"src/libtest/time.rs","byte_start":104809,"byte_end":104882,"line_start":43,"line_end":43,"column_start":5,"column_end":78}}]},{"kind":"Const","id":{"krate":0,"index":510},"span":{"file_name":"src/libtest/time.rs","byte_start":105075,"byte_end":105087,"line_start":48,"line_end":48,"column_start":15,"column_end":27},"name":"DOCTEST_WARN","qualname":"::time::time_constants::DOCTEST_WARN","value":"Duration","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":511},"span":{"file_name":"src/libtest/time.rs","byte_start":105132,"byte_end":105148,"line_start":49,"line_end":49,"column_start":15,"column_end":31},"name":"DOCTEST_CRITICAL","qualname":"::time::time_constants::DOCTEST_CRITICAL","value":"Duration","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":512},"span":{"file_name":"src/libtest/time.rs","byte_start":105308,"byte_end":105320,"line_start":53,"line_end":53,"column_start":15,"column_end":27},"name":"UNKNOWN_WARN","qualname":"::time::time_constants::UNKNOWN_WARN","value":"Duration","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":513},"span":{"file_name":"src/libtest/time.rs","byte_start":105389,"byte_end":105405,"line_start":54,"line_end":54,"column_start":15,"column_end":31},"name":"UNKNOWN_CRITICAL","qualname":"::time::time_constants::UNKNOWN_CRITICAL","value":"Duration","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":514},"span":{"file_name":"src/libtest/time.rs","byte_start":105566,"byte_end":105590,"line_start":59,"line_end":59,"column_start":8,"column_end":32},"name":"get_default_test_timeout","qualname":"::time::get_default_test_timeout","value":"fn () -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Instance` object denoting when the test should be considered\n timed out.\n","sig":null,"attributes":[{"value":"/ Returns an `Instance` object denoting when the test should be considered","span":{"file_name":"src/libtest/time.rs","byte_start":105467,"byte_end":105543,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ timed out.","span":{"file_name":"src/libtest/time.rs","byte_start":105544,"byte_end":105558,"line_start":58,"line_end":58,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":892},"span":{"file_name":"src/libtest/time.rs","byte_start":105766,"byte_end":105778,"line_start":65,"line_end":65,"column_start":12,"column_end":24},"name":"TestExecTime","qualname":"::time::TestExecTime","value":"","parent":null,"children":[],"decl_id":null,"docs":" The meassured execution time of a unit test.\n","sig":null,"attributes":[{"value":"/ The meassured execution time of a unit test.","span":{"file_name":"src/libtest/time.rs","byte_start":105671,"byte_end":105719,"line_start":63,"line_end":63,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":903},"span":{"file_name":"src/libtest/time.rs","byte_start":106074,"byte_end":106087,"line_start":75,"line_end":75,"column_start":12,"column_end":25},"name":"TimeThreshold","qualname":"::time::TimeThreshold","value":"TimeThreshold { warn, critical }","parent":null,"children":[{"krate":0,"index":904},{"krate":0,"index":905}],"decl_id":null,"docs":" Structure denoting time limits for test execution.\n","sig":null,"attributes":[{"value":"/ Structure denoting time limits for test execution.","span":{"file_name":"src/libtest/time.rs","byte_start":105954,"byte_end":106008,"line_start":73,"line_end":73,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":904},"span":{"file_name":"src/libtest/time.rs","byte_start":106098,"byte_end":106102,"line_start":76,"line_end":76,"column_start":9,"column_end":13},"name":"warn","qualname":"::time::TimeThreshold::warn","value":"std::time::Duration","parent":{"krate":0,"index":903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":905},"span":{"file_name":"src/libtest/time.rs","byte_start":106122,"byte_end":106130,"line_start":77,"line_end":77,"column_start":9,"column_end":17},"name":"critical","qualname":"::time::TimeThreshold::critical","value":"std::time::Duration","parent":{"krate":0,"index":903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"src/libtest/time.rs","byte_start":106249,"byte_end":106252,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<TimeThreshold>::new","value":"fn (warn: Duration, critical: Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TimeThreshold` instance with provided durations.\n","sig":null,"attributes":[{"value":"/ Creates a new `TimeThreshold` instance with provided durations.","span":{"file_name":"src/libtest/time.rs","byte_start":106170,"byte_end":106237,"line_start":81,"line_end":81,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"src/libtest/time.rs","byte_start":106714,"byte_end":106726,"line_start":95,"line_end":95,"column_start":12,"column_end":24},"name":"from_env_var","qualname":"<TimeThreshold>::from_env_var","value":"fn (env_var_name: &str) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to create a `TimeThreshold` instance with values obtained\n from the environment variable, and returns `None` if the variable\n is not set.\n Environment variable format is expected to match `\\d+,\\d+`.","sig":null,"attributes":[{"value":"/ Attempts to create a `TimeThreshold` instance with values obtained","span":{"file_name":"src/libtest/time.rs","byte_start":106342,"byte_end":106412,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ from the environment variable, and returns `None` if the variable","span":{"file_name":"src/libtest/time.rs","byte_start":106417,"byte_end":106486,"line_start":87,"line_end":87,"column_start":5,"column_end":74}},{"value":"/ is not set.","span":{"file_name":"src/libtest/time.rs","byte_start":106491,"byte_end":106506,"line_start":88,"line_end":88,"column_start":5,"column_end":20}},{"value":"/ Environment variable format is expected to match `\\d+,\\d+`.","span":{"file_name":"src/libtest/time.rs","byte_start":106511,"byte_end":106574,"line_start":89,"line_end":89,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"src/libtest/time.rs","byte_start":106579,"byte_end":106582,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"src/libtest/time.rs","byte_start":106587,"byte_end":106599,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"src/libtest/time.rs","byte_start":106604,"byte_end":106607,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Panics if variable with provided name is set but contains inappropriate","span":{"file_name":"src/libtest/time.rs","byte_start":106612,"byte_end":106687,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ value.","span":{"file_name":"src/libtest/time.rs","byte_start":106692,"byte_end":106702,"line_start":94,"line_end":94,"column_start":5,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":920},"span":{"file_name":"src/libtest/time.rs","byte_start":108083,"byte_end":108098,"line_start":131,"line_end":131,"column_start":12,"column_end":27},"name":"TestTimeOptions","qualname":"::time::TestTimeOptions","value":"TestTimeOptions { error_on_excess, colored, unit_threshold, integration_threshold, doctest_threshold }","parent":null,"children":[{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925}],"decl_id":null,"docs":" Structure with parameters for calculating test execution time.\n","sig":null,"attributes":[{"value":"/ Structure with parameters for calculating test execution time.","span":{"file_name":"src/libtest/time.rs","byte_start":107951,"byte_end":108017,"line_start":129,"line_end":129,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":921},"span":{"file_name":"src/libtest/time.rs","byte_start":108219,"byte_end":108234,"line_start":134,"line_end":134,"column_start":9,"column_end":24},"name":"error_on_excess","qualname":"::time::TestTimeOptions::error_on_excess","value":"bool","parent":{"krate":0,"index":920},"children":[],"decl_id":null,"docs":" Denotes if the test critical execution time limit excess should be considered\n a test failure.\n","sig":null,"attributes":[{"value":"/ Denotes if the test critical execution time limit excess should be considered","span":{"file_name":"src/libtest/time.rs","byte_start":108105,"byte_end":108186,"line_start":132,"line_end":132,"column_start":5,"column_end":86}},{"value":"/ a test failure.","span":{"file_name":"src/libtest/time.rs","byte_start":108191,"byte_end":108210,"line_start":133,"line_end":133,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":922},"span":{"file_name":"src/libtest/time.rs","byte_start":108250,"byte_end":108257,"line_start":135,"line_end":135,"column_start":9,"column_end":16},"name":"colored","qualname":"::time::TestTimeOptions::colored","value":"bool","parent":{"krate":0,"index":920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":923},"span":{"file_name":"src/libtest/time.rs","byte_start":108273,"byte_end":108287,"line_start":136,"line_end":136,"column_start":9,"column_end":23},"name":"unit_threshold","qualname":"::time::TestTimeOptions::unit_threshold","value":"time::TimeThreshold","parent":{"krate":0,"index":920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":924},"span":{"file_name":"src/libtest/time.rs","byte_start":108312,"byte_end":108333,"line_start":137,"line_end":137,"column_start":9,"column_end":30},"name":"integration_threshold","qualname":"::time::TestTimeOptions::integration_threshold","value":"time::TimeThreshold","parent":{"krate":0,"index":920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":925},"span":{"file_name":"src/libtest/time.rs","byte_start":108358,"byte_end":108375,"line_start":138,"line_end":138,"column_start":9,"column_end":26},"name":"doctest_threshold","qualname":"::time::TestTimeOptions::doctest_threshold","value":"time::TimeThreshold","parent":{"krate":0,"index":920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"src/libtest/time.rs","byte_start":108429,"byte_end":108441,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"new_from_env","qualname":"<TestTimeOptions>::new_from_env","value":"fn (error_on_excess: bool, colored: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"src/libtest/time.rs","byte_start":109068,"byte_end":109075,"line_start":156,"line_end":156,"column_start":12,"column_end":19},"name":"is_warn","qualname":"<TestTimeOptions>::is_warn","value":"fn (&self, test: &TestDesc, exec_time: &TestExecTime) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"src/libtest/time.rs","byte_start":109198,"byte_end":109209,"line_start":160,"line_end":160,"column_start":12,"column_end":23},"name":"is_critical","qualname":"<TestTimeOptions>::is_critical","value":"fn (&self, test: &TestDesc, exec_time: &TestExecTime) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":941},"span":{"file_name":"src/libtest/types.rs","byte_start":110951,"byte_end":110959,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"name":"UnitTest","qualname":"::types::TestType::UnitTest","value":"TestType::UnitTest","parent":{"krate":0,"index":940},"children":[],"decl_id":null,"docs":" Unit-tests are expected to be in the `src` folder of the crate.\n","sig":null,"attributes":[{"value":"/ Unit-tests are expected to be in the `src` folder of the crate.","span":{"file_name":"src/libtest/types.rs","byte_start":110879,"byte_end":110946,"line_start":17,"line_end":17,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":943},"span":{"file_name":"src/libtest/types.rs","byte_start":111052,"byte_end":111067,"line_start":20,"line_end":20,"column_start":5,"column_end":20},"name":"IntegrationTest","qualname":"::types::TestType::IntegrationTest","value":"TestType::IntegrationTest","parent":{"krate":0,"index":940},"children":[],"decl_id":null,"docs":" Integration-style tests are expected to be in the `tests` folder of the crate.\n","sig":null,"attributes":[{"value":"/ Integration-style tests are expected to be in the `tests` folder of the crate.","span":{"file_name":"src/libtest/types.rs","byte_start":110965,"byte_end":111047,"line_start":19,"line_end":19,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":945},"span":{"file_name":"src/libtest/types.rs","byte_start":111166,"byte_end":111173,"line_start":22,"line_end":22,"column_start":5,"column_end":12},"name":"DocTest","qualname":"::types::TestType::DocTest","value":"TestType::DocTest","parent":{"krate":0,"index":940},"children":[],"decl_id":null,"docs":" Doctests are created by the `librustdoc` manually, so it's a different type of test.\n","sig":null,"attributes":[{"value":"/ Doctests are created by the `librustdoc` manually, so it's a different type of test.","span":{"file_name":"src/libtest/types.rs","byte_start":111073,"byte_end":111161,"line_start":21,"line_end":21,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":947},"span":{"file_name":"src/libtest/types.rs","byte_start":111340,"byte_end":111347,"line_start":25,"line_end":25,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::types::TestType::Unknown","value":"TestType::Unknown","parent":{"krate":0,"index":940},"children":[],"decl_id":null,"docs":" Tests for the sources that don't follow the project layout convention\n (e.g. tests in raw `main.rs` compiled by calling `rustc --test` directly).\n","sig":null,"attributes":[{"value":"/ Tests for the sources that don't follow the project layout convention","span":{"file_name":"src/libtest/types.rs","byte_start":111179,"byte_end":111252,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/ (e.g. tests in raw `main.rs` compiled by calling `rustc --test` directly).","span":{"file_name":"src/libtest/types.rs","byte_start":111257,"byte_end":111335,"line_start":24,"line_end":24,"column_start":5,"column_end":83}}]},{"kind":"Enum","id":{"krate":0,"index":940},"span":{"file_name":"src/libtest/types.rs","byte_start":110864,"byte_end":110872,"line_start":16,"line_end":16,"column_start":10,"column_end":18},"name":"TestType","qualname":"::types::TestType","value":"TestType::{UnitTest, IntegrationTest, DocTest, Unknown}","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":943},{"krate":0,"index":945},{"krate":0,"index":947}],"decl_id":null,"docs":" Type of the test according to the [rust book](https://doc.rust-lang.org/cargo/guide/tests.html)\n conventions.\n","sig":null,"attributes":[{"value":"/ Type of the test according to the [rust book](https://doc.rust-lang.org/cargo/guide/tests.html)","span":{"file_name":"src/libtest/types.rs","byte_start":110687,"byte_end":110786,"line_start":13,"line_end":13,"column_start":1,"column_end":100}},{"value":"/ conventions.","span":{"file_name":"src/libtest/types.rs","byte_start":110787,"byte_end":110803,"line_start":14,"line_end":14,"column_start":1,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":964},"span":{"file_name":"src/libtest/types.rs","byte_start":111430,"byte_end":111437,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"PadNone","qualname":"::types::NamePadding::PadNone","value":"NamePadding::PadNone","parent":{"krate":0,"index":963},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":966},"span":{"file_name":"src/libtest/types.rs","byte_start":111443,"byte_end":111453,"line_start":31,"line_end":31,"column_start":5,"column_end":15},"name":"PadOnRight","qualname":"::types::NamePadding::PadOnRight","value":"NamePadding::PadOnRight","parent":{"krate":0,"index":963},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":963},"span":{"file_name":"src/libtest/types.rs","byte_start":111412,"byte_end":111423,"line_start":29,"line_end":29,"column_start":10,"column_end":21},"name":"NamePadding","qualname":"::types::NamePadding","value":"NamePadding::{PadNone, PadOnRight}","parent":null,"children":[{"krate":0,"index":964},{"krate":0,"index":966}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":983},"span":{"file_name":"src/libtest/types.rs","byte_start":111762,"byte_end":111776,"line_start":40,"line_end":40,"column_start":5,"column_end":19},"name":"StaticTestName","qualname":"::types::TestName::StaticTestName","value":"TestName::StaticTestName(&'static str)","parent":{"krate":0,"index":982},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":986},"span":{"file_name":"src/libtest/types.rs","byte_start":111796,"byte_end":111807,"line_start":41,"line_end":41,"column_start":5,"column_end":16},"name":"DynTestName","qualname":"::types::TestName::DynTestName","value":"TestName::DynTestName(String)","parent":{"krate":0,"index":982},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":989},"span":{"file_name":"src/libtest/types.rs","byte_start":111821,"byte_end":111836,"line_start":42,"line_end":42,"column_start":5,"column_end":20},"name":"AlignedTestName","qualname":"::types::TestName::AlignedTestName","value":"TestName::AlignedTestName(Cow<'static, str>, NamePadding)","parent":{"krate":0,"index":982},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":982},"span":{"file_name":"src/libtest/types.rs","byte_start":111747,"byte_end":111755,"line_start":39,"line_end":39,"column_start":10,"column_end":18},"name":"TestName","qualname":"::types::TestName","value":"TestName::{StaticTestName, DynTestName, AlignedTestName}","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":989}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"src/libtest/types.rs","byte_start":111900,"byte_end":111908,"line_start":46,"line_end":46,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<TestName>::as_slice","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"src/libtest/types.rs","byte_start":112095,"byte_end":112102,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"padding","qualname":"<TestName>::padding","value":"fn (&self) -> NamePadding","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"src/libtest/types.rs","byte_start":112243,"byte_end":112255,"line_start":61,"line_end":61,"column_start":12,"column_end":24},"name":"with_padding","qualname":"<TestName>::with_padding","value":"fn (&self, padding: NamePadding) -> TestName","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":546},"span":{"file_name":"src/libtest/types.rs","byte_start":112809,"byte_end":112820,"line_start":78,"line_end":78,"column_start":11,"column_end":22},"name":"TDynBenchFn","qualname":"::types::TDynBenchFn","value":"TDynBenchFn: Send","parent":null,"children":[{"krate":0,"index":547}],"decl_id":null,"docs":" Represents a benchmark function.\n","sig":null,"attributes":[{"value":"/ Represents a benchmark function.","span":{"file_name":"src/libtest/types.rs","byte_start":112762,"byte_end":112798,"line_start":77,"line_end":77,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"src/libtest/types.rs","byte_start":112836,"byte_end":112839,"line_start":79,"line_end":79,"column_start":8,"column_end":11},"name":"run","qualname":"::types::TDynBenchFn::run","value":"fn (&self, harness: &mut Bencher) -> ()","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":549},"span":{"file_name":"src/libtest/types.rs","byte_start":113152,"byte_end":113164,"line_start":87,"line_end":87,"column_start":5,"column_end":17},"name":"StaticTestFn","qualname":"::types::TestFn::StaticTestFn","value":"TestFn::StaticTestFn(fn())","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":552},"span":{"file_name":"src/libtest/types.rs","byte_start":113176,"byte_end":113189,"line_start":88,"line_end":88,"column_start":5,"column_end":18},"name":"StaticBenchFn","qualname":"::types::TestFn::StaticBenchFn","value":"TestFn::StaticBenchFn(fn(&mut Bencher))","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":555},"span":{"file_name":"src/libtest/types.rs","byte_start":113213,"byte_end":113222,"line_start":89,"line_end":89,"column_start":5,"column_end":14},"name":"DynTestFn","qualname":"::types::TestFn::DynTestFn","value":"TestFn::DynTestFn(Box<dyn FnOnce() + Send>)","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":558},"span":{"file_name":"src/libtest/types.rs","byte_start":113254,"byte_end":113264,"line_start":90,"line_end":90,"column_start":5,"column_end":15},"name":"DynBenchFn","qualname":"::types::TestFn::DynBenchFn","value":"TestFn::DynBenchFn(Box<dyn TDynBenchFn + 'static>)","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":548},"span":{"file_name":"src/libtest/types.rs","byte_start":113139,"byte_end":113145,"line_start":86,"line_end":86,"column_start":10,"column_end":16},"name":"TestFn","qualname":"::types::TestFn","value":"TestFn::{StaticTestFn, StaticBenchFn, DynTestFn, DynBenchFn}","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":558}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"src/libtest/types.rs","byte_start":113326,"byte_end":113333,"line_start":94,"line_end":94,"column_start":12,"column_end":19},"name":"padding","qualname":"<TestFn>::padding","value":"fn (&self) -> NamePadding","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1007},"span":{"file_name":"src/libtest/types.rs","byte_start":114046,"byte_end":114054,"line_start":118,"line_end":118,"column_start":12,"column_end":20},"name":"TestDesc","qualname":"::types::TestDesc","value":"TestDesc { name, ignore, should_panic, allow_fail, test_type }","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1008},"span":{"file_name":"src/libtest/types.rs","byte_start":114065,"byte_end":114069,"line_start":119,"line_end":119,"column_start":9,"column_end":13},"name":"name","qualname":"::types::TestDesc::name","value":"types::TestName","parent":{"krate":0,"index":1007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1009},"span":{"file_name":"src/libtest/types.rs","byte_start":114089,"byte_end":114095,"line_start":120,"line_end":120,"column_start":9,"column_end":15},"name":"ignore","qualname":"::types::TestDesc::ignore","value":"bool","parent":{"krate":0,"index":1007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1010},"span":{"file_name":"src/libtest/types.rs","byte_start":114111,"byte_end":114123,"line_start":121,"line_end":121,"column_start":9,"column_end":21},"name":"should_panic","qualname":"::types::TestDesc::should_panic","value":"options::ShouldPanic","parent":{"krate":0,"index":1007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1011},"span":{"file_name":"src/libtest/types.rs","byte_start":114155,"byte_end":114165,"line_start":122,"line_end":122,"column_start":9,"column_end":19},"name":"allow_fail","qualname":"::types::TestDesc::allow_fail","value":"bool","parent":{"krate":0,"index":1007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1012},"span":{"file_name":"src/libtest/types.rs","byte_start":114181,"byte_end":114190,"line_start":123,"line_end":123,"column_start":9,"column_end":18},"name":"test_type","qualname":"::types::TestDesc::test_type","value":"types::TestType","parent":{"krate":0,"index":1007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"src/libtest/types.rs","byte_start":114232,"byte_end":114243,"line_start":127,"line_end":127,"column_start":12,"column_end":23},"name":"padded_name","qualname":"<TestDesc>::padded_name","value":"fn (&self, column_count: usize, align: NamePadding) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1027},"span":{"file_name":"src/libtest/types.rs","byte_start":114657,"byte_end":114670,"line_start":142,"line_end":142,"column_start":12,"column_end":25},"name":"TestDescAndFn","qualname":"::types::TestDescAndFn","value":"TestDescAndFn { desc, testfn }","parent":null,"children":[{"krate":0,"index":1028},{"krate":0,"index":1029}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1028},"span":{"file_name":"src/libtest/types.rs","byte_start":114681,"byte_end":114685,"line_start":143,"line_end":143,"column_start":9,"column_end":13},"name":"desc","qualname":"::types::TestDescAndFn::desc","value":"types::TestDesc","parent":{"krate":0,"index":1027},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1029},"span":{"file_name":"src/libtest/types.rs","byte_start":114705,"byte_end":114711,"line_start":144,"line_end":144,"column_start":9,"column_end":15},"name":"testfn","qualname":"::types::TestDescAndFn::testfn","value":"types::TestFn","parent":{"krate":0,"index":1027},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":580},"span":{"file_name":"src/libtest/lib.rs","byte_start":3201,"byte_end":3210,"line_start":103,"line_end":103,"column_start":8,"column_end":17},"name":"test_main","qualname":"::test_main","value":"fn (args: &[String], tests: Vec<TestDescAndFn>, options: Option<Options>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":581},"span":{"file_name":"src/libtest/lib.rs","byte_start":4373,"byte_end":4389,"line_start":137,"line_end":137,"column_start":8,"column_end":24},"name":"test_main_static","qualname":"::test_main_static","value":"fn (tests: &[&TestDescAndFn]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" A variant optimized for invocation with a static test vector.\n This will panic (intentionally) when fed any dynamic tests.","sig":null,"attributes":[{"value":"/ A variant optimized for invocation with a static test vector.","span":{"file_name":"src/libtest/lib.rs","byte_start":4131,"byte_end":4196,"line_start":132,"line_end":132,"column_start":1,"column_end":66}},{"value":"/ This will panic (intentionally) when fed any dynamic tests.","span":{"file_name":"src/libtest/lib.rs","byte_start":4197,"byte_end":4260,"line_start":133,"line_end":133,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"src/libtest/lib.rs","byte_start":4261,"byte_end":4264,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ This is the entry point for the main function generated by `rustc --test`","span":{"file_name":"src/libtest/lib.rs","byte_start":4265,"byte_end":4342,"line_start":135,"line_end":135,"column_start":1,"column_end":78}},{"value":"/ when panic=unwind.","span":{"file_name":"src/libtest/lib.rs","byte_start":4343,"byte_end":4365,"line_start":136,"line_end":136,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":582},"span":{"file_name":"src/libtest/lib.rs","byte_start":4917,"byte_end":4939,"line_start":151,"line_end":151,"column_start":8,"column_end":30},"name":"test_main_static_abort","qualname":"::test_main_static_abort","value":"fn (tests: &[&TestDescAndFn]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" A variant optimized for invocation with a static test vector.\n This will panic (intentionally) when fed any dynamic tests.","sig":null,"attributes":[{"value":"/ A variant optimized for invocation with a static test vector.","span":{"file_name":"src/libtest/lib.rs","byte_start":4584,"byte_end":4649,"line_start":143,"line_end":143,"column_start":1,"column_end":66}},{"value":"/ This will panic (intentionally) when fed any dynamic tests.","span":{"file_name":"src/libtest/lib.rs","byte_start":4650,"byte_end":4713,"line_start":144,"line_end":144,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"src/libtest/lib.rs","byte_start":4714,"byte_end":4717,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ Runs tests in panic=abort mode, which involves spawning subprocesses for","span":{"file_name":"src/libtest/lib.rs","byte_start":4718,"byte_end":4794,"line_start":146,"line_end":146,"column_start":1,"column_end":77}},{"value":"/ tests.","span":{"file_name":"src/libtest/lib.rs","byte_start":4795,"byte_end":4805,"line_start":147,"line_end":147,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"src/libtest/lib.rs","byte_start":4806,"byte_end":4809,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ This is the entry point for the main function generated by `rustc --test`","span":{"file_name":"src/libtest/lib.rs","byte_start":4810,"byte_end":4887,"line_start":149,"line_end":149,"column_start":1,"column_end":78}},{"value":"/ when panic=abort.","span":{"file_name":"src/libtest/lib.rs","byte_start":4888,"byte_end":4909,"line_start":150,"line_end":150,"column_start":1,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":586},"span":{"file_name":"src/libtest/lib.rs","byte_start":6677,"byte_end":6695,"line_start":190,"line_end":190,"column_start":8,"column_end":26},"name":"assert_test_result","qualname":"::assert_test_result","value":"fn <T> (result: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Invoked when unit tests terminate. Should panic if the unit\n Tests is considered a failure. By default, invokes `report()`\n and checks for a `0` result.\n","sig":null,"attributes":[{"value":"/ Invoked when unit tests terminate. Should panic if the unit","span":{"file_name":"src/libtest/lib.rs","byte_start":6507,"byte_end":6570,"line_start":187,"line_end":187,"column_start":1,"column_end":64}},{"value":"/ Tests is considered a failure. By default, invokes `report()`","span":{"file_name":"src/libtest/lib.rs","byte_start":6571,"byte_end":6636,"line_start":188,"line_end":188,"column_start":1,"column_end":66}},{"value":"/ and checks for a `0` result.","span":{"file_name":"src/libtest/lib.rs","byte_start":6637,"byte_end":6669,"line_start":189,"line_end":189,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":588},"span":{"file_name":"src/libtest/lib.rs","byte_start":6939,"byte_end":6948,"line_start":200,"line_end":200,"column_start":8,"column_end":17},"name":"run_tests","qualname":"::run_tests","value":"fn <F> (opts: &TestOpts, tests: Vec<TestDescAndFn>, mut notify_about_test_event: F) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":603},"span":{"file_name":"src/libtest/lib.rs","byte_start":12226,"byte_end":12238,"line_start":352,"line_end":352,"column_start":8,"column_end":20},"name":"filter_tests","qualname":"::filter_tests","value":"fn (opts: &TestOpts, tests: Vec<TestDescAndFn>) -> Vec<TestDescAndFn>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":613},"span":{"file_name":"src/libtest/lib.rs","byte_start":13574,"byte_end":13601,"line_start":394,"line_end":394,"column_start":8,"column_end":35},"name":"convert_benchmarks_to_tests","qualname":"::convert_benchmarks_to_tests","value":"fn (tests: Vec<TestDescAndFn>) -> Vec<TestDescAndFn>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":621},"span":{"file_name":"src/libtest/lib.rs","byte_start":14293,"byte_end":14301,"line_start":413,"line_end":413,"column_start":8,"column_end":16},"name":"run_test","qualname":"::run_test","value":"fn (opts: &TestOpts, force_ignore: bool, test: TestDescAndFn, strategy: RunStrategy, monitor_ch: Sender<CompletedTest>, concurrency: Concurrent) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":623},"span":{"file_name":"src/libtest/lib.rs","byte_start":15005,"byte_end":15013,"line_start":435,"line_end":435,"column_start":13,"column_end":21},"name":"strategy","qualname":"::run_test::TestRunOpts::strategy","value":"options::RunStrategy","parent":{"krate":0,"index":622},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":624},"span":{"file_name":"src/libtest/lib.rs","byte_start":15040,"byte_end":15049,"line_start":436,"line_end":436,"column_start":13,"column_end":22},"name":"nocapture","qualname":"::run_test::TestRunOpts::nocapture","value":"bool","parent":{"krate":0,"index":622},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":625},"span":{"file_name":"src/libtest/lib.rs","byte_start":15069,"byte_end":15080,"line_start":437,"line_end":437,"column_start":13,"column_end":24},"name":"concurrency","qualname":"::run_test::TestRunOpts::concurrency","value":"options::Concurrent","parent":{"krate":0,"index":622},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":626},"span":{"file_name":"src/libtest/lib.rs","byte_start":15106,"byte_end":15110,"line_start":438,"line_end":438,"column_start":13,"column_end":17},"name":"time","qualname":"::run_test::TestRunOpts::time","value":"std::option::Option<time::TestTimeOptions>","parent":{"krate":0,"index":622},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"src/libtest/bench.rs","byte_start":22617,"byte_end":22624,"line_start":28,"line_end":28,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"src/libtest/cli.rs","byte_start":29404,"byte_end":29412,"line_start":30,"line_end":30,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"src/libtest/console.rs","byte_start":44014,"byte_end":44028,"line_start":27,"line_end":27,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"src/libtest/console.rs","byte_start":44928,"byte_end":44944,"line_start":59,"line_end":59,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"src/libtest/event.rs","byte_start":52797,"byte_end":52810,"line_start":16,"line_end":16,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"src/libtest/event.rs","byte_start":53042,"byte_end":53055,"line_start":27,"line_end":27,"column_start":22,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"src/libtest/formatters/json.rs","byte_start":54694,"byte_end":54707,"line_start":15,"line_end":15,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"src/libtest/formatters/json.rs","byte_start":55956,"byte_end":55969,"line_start":59,"line_end":59,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"src/libtest/formatters/json.rs","byte_start":60082,"byte_end":60095,"line_start":185,"line_end":185,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":62478,"byte_end":62493,"line_start":23,"line_end":23,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":67217,"byte_end":67232,"line_start":178,"line_end":178,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":71204,"byte_end":71218,"line_start":27,"line_end":27,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":75736,"byte_end":75750,"line_start":167,"line_end":167,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":84770,"byte_end":84776,"line_start":10,"line_end":10,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":84953,"byte_end":84962,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"src/libtest/helpers/sink.rs","byte_start":86391,"byte_end":86395,"line_start":11,"line_end":11,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"src/libtest/helpers/sink.rs","byte_start":86523,"byte_end":86527,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"src/libtest/options.rs","byte_start":88400,"byte_end":88407,"line_start":73,"line_end":73,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"src/libtest/stats.rs","byte_start":93653,"byte_end":93660,"line_start":135,"line_end":135,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"src/libtest/test_result.rs","byte_start":99969,"byte_end":99979,"line_start":27,"line_end":27,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"src/libtest/time.rs","byte_start":105817,"byte_end":105829,"line_start":67,"line_end":67,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"src/libtest/time.rs","byte_start":106150,"byte_end":106163,"line_start":80,"line_end":80,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"src/libtest/time.rs","byte_start":108400,"byte_end":108415,"line_start":141,"line_end":141,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"src/libtest/types.rs","byte_start":111878,"byte_end":111886,"line_start":45,"line_end":45,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"src/libtest/types.rs","byte_start":112633,"byte_end":112641,"line_start":71,"line_end":71,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"src/libtest/types.rs","byte_start":113306,"byte_end":113312,"line_start":93,"line_end":93,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"src/libtest/types.rs","byte_start":113585,"byte_end":113591,"line_start":104,"line_end":104,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"src/libtest/types.rs","byte_start":114210,"byte_end":114218,"line_start":126,"line_end":126,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"src/libtest/lib.rs","byte_start":2539,"byte_end":2544,"line_start":73,"line_end":73,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":78}},{"kind":"Mod","span":{"file_name":"src/libtest/helpers/mod.rs","byte_start":78965,"byte_end":78976,"line_start":4,"line_end":4,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":388}},{"kind":"Mod","span":{"file_name":"src/libtest/helpers/mod.rs","byte_start":78986,"byte_end":78995,"line_start":5,"line_end":5,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":392}},{"kind":"Mod","span":{"file_name":"src/libtest/helpers/mod.rs","byte_start":79005,"byte_end":79011,"line_start":6,"line_end":6,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":396}},{"kind":"Mod","span":{"file_name":"src/libtest/helpers/mod.rs","byte_start":79021,"byte_end":79028,"line_start":7,"line_end":7,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":398}},{"kind":"Mod","span":{"file_name":"src/libtest/helpers/mod.rs","byte_start":79038,"byte_end":79042,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":407}},{"kind":"Mod","span":{"file_name":"src/libtest/lib.rs","byte_start":2629,"byte_end":2634,"line_start":80,"line_end":80,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":427}}],"macro_refs":[],"relations":[{"span":{"file_name":"src/libtest/bench.rs","byte_start":22617,"byte_end":22624,"line_start":28,"line_end":28,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/cli.rs","byte_start":29404,"byte_end":29412,"line_start":30,"line_end":30,"column_start":6,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/console.rs","byte_start":44014,"byte_end":44028,"line_start":27,"line_end":27,"column_start":26,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":185},"to":{"krate":1,"index":2915}},{"span":{"file_name":"src/libtest/console.rs","byte_start":44928,"byte_end":44944,"line_start":59,"line_end":59,"column_start":6,"column_end":22},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/event.rs","byte_start":52797,"byte_end":52810,"line_start":16,"line_end":16,"column_start":6,"column_end":19},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/event.rs","byte_start":53042,"byte_end":53055,"line_start":27,"line_end":27,"column_start":22,"column_end":35},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":679},"to":{"krate":2,"index":1882}},{"span":{"file_name":"src/libtest/formatters/json.rs","byte_start":54694,"byte_end":54707,"line_start":15,"line_end":15,"column_start":16,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/formatters/json.rs","byte_start":55956,"byte_end":55969,"line_start":59,"line_end":59,"column_start":36,"column_end":49},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":263},"to":{"krate":0,"index":380}},{"span":{"file_name":"src/libtest/formatters/json.rs","byte_start":60082,"byte_end":60095,"line_start":185,"line_end":185,"column_start":45,"column_end":58},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":279},"to":{"krate":2,"index":5982}},{"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":62478,"byte_end":62493,"line_start":23,"line_end":23,"column_start":16,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/formatters/pretty.rs","byte_start":67217,"byte_end":67232,"line_start":178,"line_end":178,"column_start":36,"column_end":51},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":299},"to":{"krate":0,"index":380}},{"span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":71204,"byte_end":71218,"line_start":27,"line_end":27,"column_start":16,"column_end":30},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/formatters/terse.rs","byte_start":75736,"byte_end":75750,"line_start":167,"line_end":167,"column_start":36,"column_end":50},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":347},"to":{"krate":0,"index":380}},{"span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":84770,"byte_end":84776,"line_start":10,"line_end":10,"column_start":6,"column_end":12},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/helpers/metrics.rs","byte_start":84953,"byte_end":84962,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/helpers/sink.rs","byte_start":86391,"byte_end":86395,"line_start":11,"line_end":11,"column_start":6,"column_end":10},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/helpers/sink.rs","byte_start":86523,"byte_end":86527,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":414},"to":{"krate":1,"index":2915}},{"span":{"file_name":"src/libtest/options.rs","byte_start":88400,"byte_end":88407,"line_start":73,"line_end":73,"column_start":6,"column_end":13},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/stats.rs","byte_start":93653,"byte_end":93660,"line_start":135,"line_end":135,"column_start":6,"column_end":13},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/test_result.rs","byte_start":99969,"byte_end":99979,"line_start":27,"line_end":27,"column_start":22,"column_end":32},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":1882}},{"span":{"file_name":"src/libtest/time.rs","byte_start":105817,"byte_end":105829,"line_start":67,"line_end":67,"column_start":23,"column_end":35},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":892},"to":{"krate":2,"index":5982}},{"span":{"file_name":"src/libtest/time.rs","byte_start":106150,"byte_end":106163,"line_start":80,"line_end":80,"column_start":6,"column_end":19},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/time.rs","byte_start":108400,"byte_end":108415,"line_start":141,"line_end":141,"column_start":6,"column_end":21},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/types.rs","byte_start":111878,"byte_end":111886,"line_start":45,"line_end":45,"column_start":6,"column_end":14},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/types.rs","byte_start":112633,"byte_end":112641,"line_start":71,"line_end":71,"column_start":23,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":982},"to":{"krate":2,"index":5982}},{"span":{"file_name":"src/libtest/types.rs","byte_start":112822,"byte_end":112826,"line_start":78,"line_end":78,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1882},"to":{"krate":0,"index":546}},{"span":{"file_name":"src/libtest/types.rs","byte_start":113306,"byte_end":113312,"line_start":93,"line_end":93,"column_start":6,"column_end":12},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"src/libtest/types.rs","byte_start":113585,"byte_end":113591,"line_start":104,"line_end":104,"column_start":21,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":548},"to":{"krate":2,"index":5977}},{"span":{"file_name":"src/libtest/types.rs","byte_start":114210,"byte_end":114218,"line_start":126,"line_end":126,"column_start":6,"column_end":14},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1007},"to":{"krate":4294967295,"index":4294967295}}]}